{"version":3,"sources":["./src/app/shared/constants/errors.ts","./src/app/shared/components/index.ts","./src/app/core/components/main-layout/index.ts","./src/app/shared/services/auth.guard.ts","./src/app/auth/registration/registration.module.ts","./src/app/statistics/statistics.component.ts","./src/app/statistics/statistics.component.html","./src/app/auth/registration/registration.component.ts","./src/app/auth/registration/registration.component.html","./src/app/shared/constants/apiUrl.ts","./src/app/electronic-textbook/electronic-textbook.component.ts","./src/app/electronic-textbook/electronic-textbook.component.html","./src/app/statistics/statistics.module.ts","./src/environments/environment.ts","./src/app/about-us/about-us.component.ts","./src/app/about-us/about-us.component.html","./src/app/home-page/index.ts","./src/app/shared/components/footer/index.ts","./src/app/home-page/home-page.component.ts","./src/app/home-page/home-page.component.html","./src/app/shared/services/auth.service.ts","./src/app/shared/constants/dataUrl.ts","./src/app/shared/constants/index.ts","./src/app/shared/index.ts","./src/app/shared/shared.module.ts","./src/app/shared/services/localStorage.service.ts","./src/app/shared/interceptors/index.ts","./src/app/auth/login/index.ts","./src/app/shared/interceptors/token.interceptor.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/core/components/index.ts","./src/app/app.module.ts","./src/app/shared/services/index.ts","./src/app/shared/components/footer/footer.component.ts","./src/app/shared/components/footer/footer.component.html","./src/app/shared/components/header/header.component.ts","./src/app/shared/components/header/header.component.html","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/electronic-textbook/index.ts","./src/app/core/index.ts","./src/app/shared/constants/gamesName.ts","./src/app/shared/services/authAgain.guard.ts","./src/app/material/material.module.ts","./src/app/core/components/page-not-found/index.ts","./src/app/auth/index.ts","./src/app/shared/services/user.service.ts","./src/app/auth/login/login.module.ts","./src/app/shared/services/api.service.ts","./src/app/core/core.module.ts","./src/app/shared/components/header/index.ts","./src/app/material/index.ts","./src/app/app-routing.module.ts","./src/app/core/components/main-layout/main-layout.component.ts","./src/app/core/components/main-layout/main-layout.component.html","./src/app/auth/registration/index.ts","./src/app/auth/registration/password-format.validator.ts","./src/app/core/components/page-not-found/page-not-found.component.ts","./src/app/core/components/page-not-found/page-not-found.component.html","./src/app/auth/registration/password-mismatch.validator.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export enum Errors {\n  TOKEN_EXPIRED = 401,\n  FORBIDDEN = 403,\n}\n","export * from './header';\nexport * from './footer';\n","export * from './main-layout.component';\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private auth: AuthService) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    const isAuthenticated = this.auth.isAuthenticated();\n    if (isAuthenticated) {\n      return true;\n    } else {\n      this.auth.logout();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../../shared';\nimport { RouterModule } from '@angular/router';\nimport { RegistrationComponent } from './registration.component';\nimport { AuthAgainGuard } from '../../shared/services/authAgain.guard';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: RegistrationComponent,\n        canActivate: [AuthAgainGuard],\n      },\n    ]),\n  ],\n})\nexport class RegistrationModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ApiService, IMiniStats } from '../shared';\n\n@Component({\n  selector: 'app-statistics',\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.scss'],\n})\nexport class StatisticsComponent implements OnInit, OnDestroy {\n  private statisticsSubscription: Subscription;\n  public primaryXAxis: Object;\n  public chartData: Object[];\n  public titleAmount: string;\n  public titleIncrease: string;\n  public primaryYAxis: Object;\n  public primaryZAxis: Object;\n  public isStatistics = false;\n  public data: IMiniStats[] = [];\n\n  private allLearnedWordsPerDay: number;\n  private allLearnedWords: number;\n  private allRightWords: number;\n  private allWrongWords: number;\n  private learnedWordsPerDay: number;\n  private learnedWords: number;\n  private rightWords: number;\n  private wrongWords: number;\n  private maxSeries: number;\n  private series: number;\n  private learnedWordsByIds: Set<string>;\n  private allLearnedWordsByIds: Set<string>;\n\n  constructor(private apiService: ApiService) {\n    this.titleAmount = 'Количество изученных слов по дням';\n    this.titleIncrease = 'Увеличение общего количества изученных слов по дням';\n  }\n\n  ngOnInit(): void {\n    this.statisticsSubscription = this.apiService.getUserStatistics().subscribe(\n      (res) => {\n        if (res.optional) {\n          const dateNum = this.getDateNum();\n          const allWords = [];\n          this.allLearnedWordsByIds = new Set();\n          this.allLearnedWordsPerDay = 0;\n          this.allLearnedWords = 0;\n          this.allRightWords = 0;\n          this.allWrongWords = 0;\n          Object.entries(res.optional).map(([key, value]) => {\n            if (key && value.words) {\n              allWords.push(...value.words);\n              this.learnedWordsByIds = new Set();\n              this.learnedWordsPerDay = 0;\n              this.learnedWords = 0;\n              this.rightWords = 0;\n              this.wrongWords = 0;\n              this.maxSeries = 0;\n              value.words.forEach((item) => {\n                if (item.timeStamp === dateNum) {\n                  this.learnedWords = this.learnedWordsByIds.size;\n                  this.allLearnedWords = this.allLearnedWordsByIds.size;\n                  this.learnedWordsByIds = new Set([...this.learnedWordsByIds, ...item.wordsId]);\n                  this.allLearnedWordsByIds = new Set([...this.allLearnedWordsByIds, ...item.wordsId]);\n                  const learnedWordsInTraining = this.learnedWordsByIds.size - this.learnedWords;\n                  const allLearnedWordsInTraining = this.allLearnedWordsByIds.size - this.allLearnedWords;\n                  this.learnedWordsPerDay = (this.learnedWordsPerDay || 0) + learnedWordsInTraining;\n                  this.allLearnedWordsPerDay = (this.allLearnedWordsPerDay || 0) + allLearnedWordsInTraining;\n                  this.series = 0;\n                  item.answers.forEach((answer) => {\n                    if (answer === 'true') {\n                      this.series += 1;\n                      this.rightWords += 1;\n                      this.allRightWords += 1;\n                    } else {\n                      this.maxSeries = this.maxSeries > this.series ? this.maxSeries : this.series;\n                      this.series = 0;\n                      this.wrongWords += 1;\n                      this.allWrongWords += 1;\n                    }\n                  });\n                }\n              });\n\n              this.data.push({\n                nameMiniGame: key,\n                learnedWordsPerDay: this.learnedWordsPerDay,\n                maxSeries: this.maxSeries,\n                rightWords: this.rightWords,\n                wrongWords: this.wrongWords,\n              });\n            }\n          });\n\n          this.data.push({\n            nameMiniGame: 'Общая',\n            learnedWordsPerDay: this.allLearnedWordsPerDay,\n            rightWords: this.allRightWords,\n            wrongWords: this.allWrongWords,\n          });\n\n          const learnedWordsPerDay: { [key: string]: number } = {};\n          this.learnedWords = 0;\n          this.learnedWordsByIds = new Set();\n          allWords.forEach((item) => {\n            this.learnedWords = this.learnedWordsByIds.size;\n            this.learnedWordsByIds = new Set([...this.learnedWordsByIds, ...item.wordsId]);\n            const learnedWordsInTraining = this.learnedWordsByIds.size - this.learnedWords;\n            learnedWordsPerDay[item.timeStamp] = (learnedWordsPerDay[item.timeStamp] || 0) + learnedWordsInTraining;\n          });\n\n          const dates = Object.keys(learnedWordsPerDay);\n          const amountWords = Object.values(learnedWordsPerDay);\n          const calculationSum = ((sum: number) => {\n            return (value: number) => {\n              return (sum += value);\n            };\n          })(0);\n          const increaseWords = amountWords.map(calculationSum);\n\n          this.chartData = [];\n          dates.forEach((item, index) =>\n            this.chartData.push({\n              x: item,\n              y: amountWords[index],\n              z: increaseWords[index],\n            }),\n          );\n\n          this.primaryXAxis = {\n            interval: 10000,\n            title: 'Дата',\n          };\n          this.primaryYAxis = {\n            minimum: 0,\n            maximum: Math.max(...amountWords) + 5,\n            interval: Math.trunc((Math.max(...amountWords) + 5) / 10),\n            title: 'Количество слов',\n          };\n          this.primaryZAxis = {\n            minimum: 0,\n            maximum: increaseWords[increaseWords.length - 1] + 10,\n            interval: Math.trunc((increaseWords[increaseWords.length - 1] + 10) / 10),\n            title: 'Количество слов',\n          };\n          this.isStatistics = true;\n        } else this.isStatistics = false;\n      },\n      (error) => {\n        this.isStatistics = false;\n        console.log(error);\n      },\n    );\n  }\n\n  ngOnDestroy() {\n    this.statisticsSubscription.unsubscribe();\n  }\n\n  getDateNum(): number {\n    const date = new Date(Date.now());\n    return Number(\n      new Date(date.getFullYear(), date.getMonth(), date.getDate())\n        .toLocaleString('ru', {\n          year: '2-digit',\n          month: '2-digit',\n          day: '2-digit',\n        })\n        .split('.')\n        .join(''),\n    );\n  }\n}\n","<div class=\"control-section\">\n  <ng-container *ngIf=\"isStatistics; else noStatistics\">\n    <mat-tab-group class=\"statistics\" mat-align-tabs=\"center\" [ngStyle]=\"{ 'background-color': '#fdfdfd', 'max-width': '95vw' }\">\n      <mat-tab *ngFor=\"let statistics of data\" label=\"{{ statistics.nameMiniGame }}\">\n        <p class=\"statistics__row\">\n          <span class=\"statistics__title\">Изученные слова за день</span>\n          <span class=\"statistics__amount\">{{ statistics.learnedWordsPerDay }}</span>\n        </p>\n        <mat-divider></mat-divider>\n        <p class=\"statistics__row\">\n          <span class=\"statistics__title\">Процент правильных ответов за день</span>\n          <span class=\"statistics__amount\">\n            {{ statistics.rightWords / (statistics.rightWords + statistics.wrongWords) | percent: \"1.0-2\" }}\n          </span>\n        </p>\n        <mat-divider></mat-divider>\n        <p class=\"statistics__row\" *ngIf=\"statistics.maxSeries\">\n          <span class=\"statistics__title\">Cамая длинная серия правильных ответов за день</span>\n          <span class=\"statistics__amount\">{{ statistics.maxSeries }}</span>\n        </p>\n        <mat-divider></mat-divider>\n      </mat-tab>\n    </mat-tab-group>\n    <ejs-chart\n      id=\"chart-containerAmount\"\n      class=\"container-chart\"\n      [primaryXAxis]=\"primaryXAxis\"\n      [primaryYAxis]=\"primaryYAxis\"\n      [title]=\"titleAmount\"\n    >\n      <e-series-collection>\n        <e-series [dataSource]=\"chartData\" type=\"Line\" xName=\"x\" yName=\"y\"></e-series>\n      </e-series-collection>\n    </ejs-chart>\n    <ejs-chart\n      id=\"chart-containerIncrease\"\n      class=\"container-chart\"\n      [primaryXAxis]=\"primaryXAxis\"\n      [primaryYAxis]=\"primaryZAxis\"\n      [title]=\"titleIncrease\"\n    >\n      <e-series-collection>\n        <e-series [dataSource]=\"chartData\" type=\"Line\" xName=\"x\" yName=\"z\"></e-series>\n      </e-series-collection>\n    </ejs-chart>\n  </ng-container>\n  <ng-template #noStatistics>\n    <p>У вас еще нет статистики. Поиграйте в мини-игры для тренировки английских слов и отображения статистики.</p>\n  </ng-template>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../shared/services';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IUserCreate } from '../../shared/models';\nimport { MismatchValidator } from './password-mismatch.validator';\nimport { PasswordFormatValidator } from './password-format.validator';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss'],\n})\nexport class RegistrationComponent implements OnInit, OnDestroy {\n  form: FormGroup;\n  submitted = false;\n  authSubscription: Subscription;\n  hide = true;\n\n  constructor(public auth: AuthService, private router: Router, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.initForm();\n    this.setValidators();\n  }\n\n  ngOnDestroy(): void {\n    if (this.authSubscription) {\n      this.authSubscription.unsubscribe();\n    }\n  }\n\n  initForm(): void {\n    this.form = new FormGroup({\n      email: new FormControl(null, [Validators.email, Validators.required]),\n      password: new FormControl(null),\n      confirmPassword: new FormControl(null),\n    });\n  }\n\n  // if create validators inside form initializing they can't see the form\n  setValidators(): void {\n    // validator for password confirmation\n    const formValidators = {\n      confirmPassword: Validators.compose([Validators.required, MismatchValidator.mismatch(this.form.get('password'))]),\n    };\n\n    // validator for passing password to the special requirement (see PasswordFormatValidator)\n    const passwordFormatValidators = {\n      password: Validators.compose([Validators.required, Validators.minLength(8), PasswordFormatValidator.passFormat()]),\n    };\n\n    this.form.get('confirmPassword').setValidators(formValidators['confirmPassword']);\n    this.form.get('password').setValidators(passwordFormatValidators['password']);\n  }\n\n  submit(): void {\n    // to disable button 'submit' if form was already submitted\n    this.submitted = true;\n\n    // create user, get user data from UI\n    const user: IUserCreate = {\n      email: this.form.value.email,\n      password: this.form.value.password,\n    };\n\n    // clean form fields and redirect to admin page\n    this.authSubscription = this.auth.register(user).subscribe(\n      () => {\n        this.form.reset();\n        this.submitted = false;\n        this.router.navigate(['login']);\n      },\n      () => (this.submitted = false),\n    );\n  }\n}\n","<app-header></app-header>\n\n<div class=\"main-container\">\n  <form [formGroup]=\"form\" (ngSubmit)=\"submit()\" class=\"card\">\n    <h2>Registration</h2>\n\n    <div class=\"form-container\">\n      <mat-form-field>\n        <input matInput placeholder=\"Email адрес\" formControlName=\"email\" required />\n        <div class=\"errors-container\" *ngIf=\"form.get('email').touched && form.get('email').invalid\">\n          <mat-error *ngIf=\"form.get('email').hasError('required')\"> Поле \"Почта\" обязательно </mat-error>\n          <mat-error *ngIf=\"form.get('email').hasError('email')\"> Введите поле \"Почта\" в формате email@email.com </mat-error>\n        </div>\n      </mat-form-field>\n\n      <mat-form-field>\n        <input matInput placeholder=\"Новый пароль\" [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" required />\n        <mat-icon matSuffix (click)=\"hide = !hide\">{{ hide ? \"visibility\" : \"visibility_off\" }}</mat-icon>\n\n        <div class=\"errors-container\" *ngIf=\"form.get('password').touched && form.get('password').invalid\">\n          <mat-error *ngIf=\"form.get('password').hasError('required')\"> Поле \"Пароль\" обязательно </mat-error>\n\n          <mat-error *ngIf=\"form.get('password').hasError('minlength')\">\n            Пароль должен быть длинной в\n            {{ form.get(\"password\").errors.minlength.requiredLength }} символов. Сейчас длина пароля составляет\n            {{ form.get(\"password\").errors.minlength.actualLength }} символов\n          </mat-error>\n\n          <mat-error *ngIf=\"form.get('password').hasError('passFormat')\">\n            Максимум 10000 символов, как минимум одна большая латинская буква, одна маленькая, одна цифра и один спецсимвол\n            <pre><code>-+_@$!%*?&amp;#.,;:</code></pre>\n          </mat-error>\n        </div>\n      </mat-form-field>\n\n      <mat-form-field>\n        <input matInput placeholder=\"Повторите пароль\" [type]=\"hide ? 'password' : 'text'\" formControlName=\"confirmPassword\" required />\n        <mat-icon matSuffix (click)=\"hide = !hide\">{{ hide ? \"visibility\" : \"visibility_off\" }}</mat-icon>\n\n        <div class=\"errors-container\" *ngIf=\"form.get('confirmPassword').touched && form.get('confirmPassword').invalid\">\n          <mat-error *ngIf=\"form.get('confirmPassword').hasError('required')\"> Подтвердить пароль обязательно </mat-error>\n\n          <mat-error *ngIf=\"form.get('confirmPassword').hasError('mismatch')\"> Пароли должны совпадать </mat-error>\n        </div>\n      </mat-form-field>\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"form.invalid || submitted\">Register</button>\n  </form>\n</div>\n\n<app-footer></app-footer>\n","export const API_URL = 'https://dispet-learnwords.herokuapp.com';\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-electronic-textbook',\n  templateUrl: './electronic-textbook.component.html',\n  styleUrls: ['./electronic-textbook.component.scss'],\n})\nexport class ElectronicTextbookComponent {\n  constructor() {}\n}\n","<div class=\"text-book\">\n  <mat-card>\n    <mat-card-header>\n      <mat-card-title>Каталог слов</mat-card-title>\n    </mat-card-header>\n    <img mat-card-image src=\"../../assets/icons/words-list.svg\" alt=\"Каталог слов\" />\n    <mat-card-actions>\n      <button mat-button routerLink=\"/words-list\">Открыть</button>\n    </mat-card-actions>\n  </mat-card>\n  <mat-card>\n    <mat-card-header>\n      <mat-card-title>Словарь</mat-card-title>\n    </mat-card-header>\n    <img mat-card-image src=\"../../assets/icons/dictionary.svg\" alt=\"Словарь\" />\n    <mat-card-actions>\n      <button mat-button routerLink=\"/dictionary\">Открыть</button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ChartAllModule } from '@syncfusion/ej2-angular-charts';\nimport { SharedModule } from '../shared';\nimport { StatisticsComponent } from './statistics.component';\n\n@NgModule({\n  declarations: [StatisticsComponent],\n  imports: [\n    SharedModule,\n    ChartAllModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: StatisticsComponent,\n      },\n    ]),\n  ],\n})\nexport class StatisticsModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'app-about-us',\n\ttemplateUrl: './about-us.component.html',\n\tstyleUrls: ['./about-us.component.scss'],\n})\nexport class AboutUsComponent {\n\tconstructor() {}\n}\n","<div class=\"about-us\">\n  <div class=\"cards\">\n    <mat-card>\n      <mat-card-title>Павел</mat-card-title>\n      <mat-divider [inset]=\"true\"></mat-divider>\n      <img mat-card-image src=\"../../assets/icons/question.svg\" alt=\"\" />\n      <mat-card-subtitle>Тим-лид. Роутинг, регистрация...</mat-card-subtitle>\n      <a href=\"https://github.com/BustterBrot777\">\n        <img src=\"./../../assets/icons/GitHub_Logo.png\" alt=\"github\" />\n      </a>\n    </mat-card>\n\n    <mat-card>\n      <mat-card-title>Сергей</mat-card-title>\n      <mat-divider [inset]=\"true\"></mat-divider>\n      <img mat-card-image src=\"../../assets/icons/question.svg\" alt=\"\" />\n      <mat-card-subtitle>Бэкенд, регистрация...</mat-card-subtitle>\n      <a href=\"https://github.com/dispet\">\n        <img src=\"./../../assets/icons/GitHub_Logo.png\" alt=\"github\" />\n      </a>\n    </mat-card>\n\n    <mat-card>\n      <mat-card-title>Улугбек</mat-card-title>\n      <mat-divider [inset]=\"true\"></mat-divider>\n      <img mat-card-image src=\"../../assets/icons/question.svg\" alt=\"\" />\n      <mat-card-subtitle>Саванна, статистика...</mat-card-subtitle>\n      <a href=\"https://github.com/ErgashevUlugbek\">\n        <img src=\"./../../assets/icons/GitHub_Logo.png\" alt=\"github\" />\n      </a>\n    </mat-card>\n\n    <mat-card>\n      <mat-card-title>Виталик</mat-card-title>\n      <mat-divider [inset]=\"true\"></mat-divider>\n      <img mat-card-image src=\"../../assets/icons/question.svg\" alt=\"\" />\n      <mat-card-subtitle>Домашняя страница, словарь...</mat-card-subtitle>\n      <a href=\"https://github.com/vitalibury\">\n        <img src=\"./../../assets/icons/GitHub_Logo.png\" alt=\"github\" />\n      </a>\n    </mat-card>\n\n    <mat-card>\n      <mat-card-title>Наталья</mat-card-title>\n      <mat-divider [inset]=\"true\"></mat-divider>\n      <img mat-card-image src=\"../../assets/icons/question.svg\" alt=\"\" />\n      <mat-card-subtitle>Аудиокол, TypeMe, видео-гид, главная страница</mat-card-subtitle>\n      <a href=\"https://github.com/Kutsak-Nataly\">\n        <img src=\"./../../assets/icons/GitHub_Logo.png\" alt=\"github\" />\n      </a>\n    </mat-card>\n  </div>\n</div>\n","export * from './home-page.component'\n","export * from './footer.component';\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.scss'],\n})\nexport class HomePageComponent {\n  constructor() { }\n}\n","<div class=\"home-page\">\n  <mat-card class=\"example-card1\">\n    <mat-card-header>\n      <mat-card-title>Прокачай свой английский!</mat-card-title>\n      <mat-card-subtitle>Приложение для изучения английского языка</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n      <p>\n        RS Lang &mdash; приложение для изучения иностранных слов, включающее электронный учебник с базой слов для изучения, мини-игры для их\n        повторения, страницу статистики для отслеживания индивидуального прогресса.\n      </p>\n      <mat-list role=\"list\">\n        <mat-list-item role=\"listitem\">\n          <mat-icon mat-list-icon color=\"primary\">add_circle</mat-icon>\n          Электронный учебник, включающий в себя \"Список слов\" и \"Словарь\"\n        </mat-list-item>\n        <mat-list-item>\n          <mat-icon mat-list-icon color=\"primary\">add_circle</mat-icon>\n          Интерактивные мини-игры для запоминания слов в игровой форме\n        </mat-list-item>\n        <mat-list-item>\n          <mat-icon mat-list-icon color=\"primary\">add_circle</mat-icon>\n          Возможность отслеживания статистики и своих успехов в изучении английского языка\n        </mat-list-item>\n      </mat-list>\n    </mat-card-content>\n  </mat-card>\n\n  <mat-card class=\"example-card2\">\n    <mat-card-header>\n      <mat-card-title>Приложение для изучения английского языка</mat-card-title>\n      <mat-card-subtitle>Видео-инструкция по приложению</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n      <div class=\"thumb-wrap\">\n        <iframe\n          width=\"560\"\n          height=\"315\"\n          src=\"https://www.youtube.com/embed/RwjOCvX95Is\"\n          title=\"YouTube video player\"\n          frameborder=\"0\"\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n          allowfullscreen\n        ></iframe>\n      </div>\n    </mat-card-content>\n  </mat-card>\n\n  <mat-card class=\"example-card3\">\n    <mat-card-header>\n      <mat-card-title>Почему именно наше приложение:</mat-card-title>\n      <mat-card-subtitle>\n        <mat-icon mat-list-icon color=\"accent\">grade</mat-icon>\n        <mat-icon mat-list-icon color=\"accent\">grade</mat-icon>\n        <mat-icon mat-list-icon color=\"accent\">grade</mat-icon>\n        <mat-icon mat-list-icon color=\"accent\">grade</mat-icon>\n        <mat-icon mat-list-icon color=\"accent\">grade</mat-icon>\n      </mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n      <img mat-card-image src=\"../../assets/icons/main-page-line-01.svg\" alt=\"Приложение для изучения английского языка\" />\n      <mat-list role=\"list\">\n        <mat-list-item role=\"listitem\">\n          <mat-icon mat-list-icon color=\"primary\">add_circle</mat-icon>\n          Добавляй слова в категорию \"Сложные\" и \"Удаленные\", чтобы одни всегда были под рукой, а другие не мешали изучать новые\n        </mat-list-item>\n        <mat-list-item role=\"listitem\">\n          <mat-icon mat-list-icon color=\"primary\">add_circle</mat-icon>\n          Настраивай самостоятельно отображение информации об изучаемом слове в зависимости от своего уровня знаний\n        </mat-list-item>\n        <mat-list-item role=\"listitem\">\n          <mat-icon mat-list-icon color=\"primary\">add_circle</mat-icon>\n          Определяй сам, с какими словами хочешь играть\n        </mat-list-item>\n        <mat-list-item role=\"listitem\">\n          <mat-icon mat-list-icon color=\"primary\">add_circle</mat-icon>\n          Дружелюбный интерфейс не оставляет равнодушным ни одного изучающего язык\n        </mat-list-item>\n      </mat-list>\n    </mat-card-content>\n  </mat-card>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { LocalStorageService } from './localStorage.service';\nimport { UserService } from './user.service';\nimport { ApiService } from './api.service';\nimport { ILoginResponse, IRefreshTokenResponse, IUserCreate, IUserCreateResponse } from '../models';\nimport { API_URL } from '../constants';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private url: string = API_URL;\n  private token = '';\n  private refreshToken = '';\n\n  isAuthSubject = new BehaviorSubject<boolean>(false);\n\n  constructor(\n    private http: HttpClient,\n    private localStorageService: LocalStorageService,\n    private userService: UserService,\n    private router: Router,\n    private apiService: ApiService,\n  ) {}\n\n  login(user: IUserCreate): Observable<ILoginResponse> {\n    return this.http.post<ILoginResponse>(`${this.url}/signin`, user).pipe(\n      tap(({ refreshToken, token, userId }) => {\n        this.localStorageService.setAuthData({ refreshToken, token, userId });\n        this.setToken(token);\n        this.setRefreshToken(refreshToken);\n        this.apiService.setUserId(userId);\n      }),\n    );\n  }\n\n  register(user: IUserCreate): Observable<IUserCreateResponse> {\n    return this.http.post<IUserCreateResponse>(`${this.url}/users`, user);\n  }\n\n  updateTokens(): Observable<IRefreshTokenResponse> {\n    const userId = this.localStorageService.getUserId();\n    return this.http.get<IRefreshTokenResponse>(`${this.url}/users/${userId}/tokens`).pipe(\n      tap(({ refreshToken, token }) => {\n        this.localStorageService.setAuthData({ refreshToken, token, userId });\n        this.setToken(token);\n        this.setRefreshToken(refreshToken);\n      }),\n    );\n  }\n\n  isAuthenticated(): boolean {\n    return Boolean(this.localStorageService.getToken());\n  }\n\n  getAuthStatus(): void {\n    const isAuth = this.isAuthenticated();\n    isAuth ? this.isAuthSubject.next(true) : this.isAuthSubject.next(false);\n  }\n\n  setToken(token): void {\n    this.token = token;\n  }\n\n  getToken(): string {\n    return this.token;\n  }\n\n  setRefreshToken(refreshToken): void {\n    this.refreshToken = refreshToken;\n  }\n\n  getRefreshToken(): string {\n    return this.refreshToken;\n  }\n\n  logout(): void {\n    this.setToken(null);\n    this.setRefreshToken(null);\n    this.userService.setUser(null);\n    this.apiService.setUserId(null);\n    this.localStorageService.deleteUser();\n    this.localStorageService.clearAuthData();\n    this.router.navigate(['/login']);\n  }\n}\n","export const DATA_URL = 'https://dispet.github.io/rslang-data';\n","export { API_URL } from './apiUrl';\nexport { DATA_URL } from './dataUrl';\nexport { Errors } from './errors';\nexport { GAMES_NAME } from './gamesName';\n","export * from './components';\nexport * from './models';\n// export * from './directives';\n// export * from './pipes';\nexport * from './services';\nexport * from './interceptors';\nexport * from './constants';\nexport { SharedModule } from './shared.module';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { MaterialModule } from '../material';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FooterComponent, HeaderComponent } from './components';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, MaterialModule, RouterModule, HttpClientModule],\n  declarations: [HeaderComponent, FooterComponent],\n  exports: [CommonModule, RouterModule, HeaderComponent, FormsModule, ReactiveFormsModule, MaterialModule, FooterComponent],\n  providers: [],\n})\nexport class SharedModule {}\n","import {Injectable} from '@angular/core';\nimport {IAuthData, IUser} from '../models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorageService {\n  setAuthData(data: IAuthData): void {\n    localStorage.setItem('token', data.token);\n    localStorage.setItem('refreshToken', data.refreshToken);\n    localStorage.setItem('userId', data.userId);\n  }\n\n  clearAuthData(): void {\n    localStorage.removeItem('token');\n    localStorage.removeItem('refreshToken');\n    localStorage.removeItem('userId');\n  }\n\n  setUser(user): void {\n    localStorage.setItem('name', user.name);\n    localStorage.setItem('email', user.email);\n  }\n\n  getUser(): IUser {\n    const name = localStorage.getItem('name');\n    const email = localStorage.getItem('email');\n\n    if (name && email) {\n      return {name, email};\n    }\n\n    return null;\n  }\n\n  deleteUser(): void {\n    localStorage.removeItem('name');\n    localStorage.removeItem('email');\n  }\n\n  getToken(): string {\n    return localStorage.getItem('token');\n  }\n\n  getRefreshToken(): string {\n    return localStorage.getItem('refreshToken');\n  }\n\n  getUserId(): string {\n    return localStorage.getItem('userId');\n  }\n\n  getTranslateSetting() {\n    return localStorage.getItem('RSLangIsTranslateDisplay');\n  }\n\n  getControlsSetting() {\n    return localStorage.getItem('RSLangIsControlsDisplay');\n  }\n\n  createTranslateSetting() {\n    localStorage.setItem('RSLangIsTranslateDisplay', '1');\n  }\n\n  createControlsSetting() {\n    localStorage.setItem('RSLangIsControlsDisplay', '1');\n  }\n\n  setTranslateDisplay(isDisplay: number) {\n    localStorage.setItem('RSLangIsTranslateDisplay', `${isDisplay}`);\n  }\n\n  setControlsSetting(isDisplay: number) {\n    localStorage.setItem('RSLangIsControlsDisplay', `${isDisplay}`);\n  }\n}\n","export { TokenInterceptor } from './token.interceptor';\n","export * from './login.component';\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport { AuthService, LocalStorageService, UserService, ApiService } from '../services';\nimport { ITokenPayload } from '../models';\nimport { Errors } from '../constants';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  private isRefreshing = false;\n\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private localStorageService: LocalStorageService,\n    private userService: UserService,\n    private apiService: ApiService,\n  ) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (this.auth.isAuthenticated()) {\n      const userId = this.localStorageService.getUserId();\n      if (req.url.includes(`/users/${userId}/tokens`)) {\n        req = this.addToken(req, this.auth.getRefreshToken());\n      } else {\n        req = this.addToken(req, this.auth.getToken());\n      }\n      const token: string = this.auth.getToken();\n      try {\n        const tokenPayload: ITokenPayload = JSON.parse(atob(token.match(/\\..+\\./)[0].slice(1, -1)));\n        const tokenExpDate: number = tokenPayload.exp;\n        const minutesLeft: number = (tokenExpDate - Date.now() / 1000) / 60;\n        if (minutesLeft < 120 && !this.isRefreshing) {\n          this.isRefreshing = true;\n          return this.auth.updateTokens().pipe(\n            switchMap(() => {\n              this.isRefreshing = false;\n              return next.handle(req).pipe(catchError((err: HttpErrorResponse) => this.handleAuthError(err)));\n            }),\n          );\n        }\n      } catch {}\n    }\n\n    return next.handle(req).pipe(catchError((err: HttpErrorResponse) => this.handleAuthError(err)));\n  }\n\n  private addToken(req: HttpRequest<any>, token: string): HttpRequest<any> {\n    return req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n  }\n\n  private handleAuthError(err: HttpErrorResponse): Observable<never> {\n    if (err.status === Errors.FORBIDDEN || err.status === Errors.TOKEN_EXPIRED) {\n      this.auth.setToken(null);\n      this.auth.setRefreshToken(null);\n      this.apiService.setUserId(null);\n      this.localStorageService.clearAuthData();\n      this.userService.setUser(null);\n      this.localStorageService.deleteUser();\n      const queryParam = err.status === Errors.TOKEN_EXPIRED ? 'sessionFailed' : 'accessDenied';\n      const queryParams = {};\n      queryParams[queryParam] = true;\n      this.router.navigate(['/login'], {\n        queryParams,\n      });\n    }\n    return throwError(err);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\nimport { filter } from 'rxjs/operators';\nimport { AuthService, LocalStorageService, UserService, ApiService } from './shared';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'rslang';\n\n  constructor(\n    private auth: AuthService,\n    private activatedRoute: ActivatedRoute,\n    private apiService: ApiService,\n    private localStore: LocalStorageService,\n    private router: Router,\n    private titleService: Title,\n    private userService: UserService,\n  ) {}\n\n  ngOnInit(): void {\n    const token = this.localStore.getToken();\n    const refreshToken = this.localStore.getRefreshToken();\n    const user = this.localStore.getUser();\n    const userId = this.localStore.getUserId();\n\n    if (token) {\n      this.auth.setToken(token);\n    }\n\n    if (refreshToken) {\n      this.auth.setRefreshToken(refreshToken);\n    }\n\n    if (user) {\n      this.userService.setUser(user);\n    }\n\n    if (userId) {\n      this.apiService.setUserId(userId);\n    }\n\n    this.router.events.pipe(filter((event) => event instanceof NavigationEnd)).subscribe(() => {\n      const child = this.getChild(this.activatedRoute);\n      child.data.subscribe((data) => {\n        this.titleService.setTitle(data.title);\n      });\n    });\n  }\n\n  getChild(activatedRoute: ActivatedRoute) {\n    if (activatedRoute.firstChild) {\n      return this.getChild(activatedRoute.firstChild);\n    } else {\n      return activatedRoute;\n    }\n  }\n}\n","<router-outlet></router-outlet>\n","export * from './main-layout';\nexport * from './page-not-found';\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { CoreModule } from './core';\n\nimport { SharedModule, TokenInterceptor } from './shared';\nimport { LoginModule } from './auth/login/login.module';\nimport { RegistrationModule } from './auth/registration/registration.module';\nimport { StatisticsModule } from './statistics/statistics.module';\n\nimport { AppComponent } from './app.component';\nimport { ElectronicTextbookComponent } from './electronic-textbook';\nimport { RegistrationComponent } from './auth';\nimport { HomePageComponent } from './home-page';\nimport { AboutUsComponent } from './about-us/about-us.component';\n\n@NgModule({\n  declarations: [AppComponent, ElectronicTextbookComponent, RegistrationComponent, HomePageComponent, AboutUsComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    LoginModule,\n    RegistrationModule,\n    SharedModule,\n    CoreModule,\n    StatisticsModule,\n  ],\n  providers: [{ provide: HTTP_INTERCEPTORS, multi: true, useClass: TokenInterceptor }],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","export { ApiService } from './api.service';\nexport { AuthService } from './auth.service';\nexport { LocalStorageService } from './localStorage.service';\nexport { UserService } from './user.service';\nexport { AuthGuard } from './auth.guard';\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'app-footer',\n\ttemplateUrl: './footer.component.html',\n\tstyleUrls: ['./footer.component.scss'],\n})\nexport class FooterComponent {\n\tconstructor() {}\n}\n","<footer>\n  <div class=\"app-links\">\n    <a href=\"https://github.com/BustterBrot777\">\n      <button mat-button>\n        <img src=\"../../../../assets/icons/GitHub-Mark-32px.png\" alt=\"github\" />\n        Павел\n      </button>\n    </a>\n    <a href=\"https://github.com/dispet\">\n      <button mat-button>\n        <img src=\"../../../../assets/icons/GitHub-Mark-32px.png\" alt=\"github\" />\n        Сергей\n      </button>\n    </a>\n    <a href=\"https://github.com/ErgashevUlugbek\">\n      <button mat-button>\n        <img src=\"../../../../assets/icons/GitHub-Mark-32px.png\" alt=\"github\" />\n        Улугбек\n      </button>\n    </a>\n    <a href=\"https://github.com/Kutsak-Nataly\">\n      <button mat-button>\n        <img src=\"../../../../assets/icons/GitHub-Mark-32px.png\" alt=\"github\" />\n        Наталья\n      </button>\n    </a>\n    <a href=\"https://github.com/vitalibury\">\n      <button mat-button>\n        <img src=\"../../../../assets/icons/GitHub-Mark-32px.png\" alt=\"github\" />\n        Виталик\n      </button>\n    </a>\n    <a class=\"rs-school\" href=\"https://rs.school/angular/\" routerLink=\"https://rollingscopes.com/\">\n      <img src=\"../../../../assets/icons/rs_school_js.svg\" alt=\"RS School\" />\n    </a>\n  </div>\n  <div class=\"release-date\">©2021</div>\n</footer>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AuthService, LocalStorageService } from '../../services';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  private authSubscription: Subscription;\n\n  isLogin = false;\n\n  constructor(private authService: AuthService, private localStorageService: LocalStorageService) {}\n\n  ngOnInit(): void {\n    const isAuth = Boolean(this.localStorageService.getToken());\n    this.authSubscription = this.authService.isAuthSubject.subscribe((userStatus) => {\n      this.isLogin = userStatus || isAuth;\n    });\n  }\n\n  ngOnDestroy() {\n    this.authSubscription.unsubscribe();\n  }\n\n  logout(): void {\n    this.authService.isAuthSubject.next(false);\n    this.authService.logout();\n  }\n}\n","<mat-toolbar>\n  <span class=\"logo\" routerLink=\"\">RS Lang</span>\n  <mat-nav-list>\n    <a mat-list-item routerLink=\"/text-book\"> Электронный учебник </a>\n    <a mat-list-item routerLink=\"/mini-games\">Мини-игры</a>\n    <a *ngIf=\"isLogin\" mat-list-item routerLink=\"/statistics\">Статистика</a>\n    <a mat-list-item routerLink=\"/about-us\">О нас</a>\n  </mat-nav-list>\n  <span class=\"example-spacer\"></span>\n  <div *ngIf=\"!isLogin\">\n    <button mat-icon-button color=\"primary\" routerLink=\"/registration\" title=\"Зарегистрироваться\">\n      <mat-icon>app_registration</mat-icon>\n    </button>\n    <button mat-icon-button color=\"primary\" routerLink=\"/login\" title=\"Войти\" *ngIf=\"!isLogin\">\n      <mat-icon>login</mat-icon>\n    </button>\n  </div>\n  <div>\n    <button *ngIf=\"isLogin\" mat-icon-button color=\"primary\" title=\"Выйти\">\n      <mat-icon (click)=\"logout()\">logout</mat-icon>\n    </button>\n  </div>\n</mat-toolbar>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { AuthService } from '../../shared/services';\nimport { IUserCreate } from '../../shared/models';\nimport { Subscription } from 'rxjs';\nimport { mergeMap, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  form: FormGroup;\n  submitted = false;\n  authSubscription: Subscription;\n  message = '';\n  hide = true;\n\n  constructor(public auth: AuthService, private router: Router, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      email: new FormControl(null, [Validators.email, Validators.required]),\n      password: new FormControl(null, [Validators.required]),\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.authSubscription) {\n      this.authSubscription.unsubscribe();\n    }\n  }\n\n  submit(): void {\n    // if (this.form.invalid) {\n    //   return;\n    // }\n\n    // to disable button 'submit' if form was already submitted\n    this.submitted = true;\n\n    // create user, get user data from UI\n    const user: IUserCreate = {\n      email: this.form.value.email,\n      password: this.form.value.password,\n    };\n\n    // clean form fields and redirect to admin page\n    this.auth.login(user).subscribe(\n      () => {\n        this.form.reset();\n        this.submitted = false;\n        this.router.navigate(['text-book']);\n      },\n      (error) => {\n        this.submitted = false;\n        if (!error.ok) {\n          this.message = 'Неверные логин или пароль';\n        }\n      },\n    );\n  }\n}\n","<app-header></app-header>\n\n<div class=\"main-container\">\n  <form [formGroup]=\"form\" (ngSubmit)=\"submit()\" class=\"card\">\n    <h2>Login</h2>\n\n    <div class=\"form-container\">\n      <div class=\"alert alert-danger\" *ngIf=\"message\">{{ message }}</div>\n\n      <mat-form-field>\n        <input id=\"email\" matInput placeholder=\"Email адрес\" formControlName=\"email\" required />\n        <div class=\"errors-container\" *ngIf=\"form.get('email').touched && form.get('email').invalid\">\n          <mat-error *ngIf=\"form.get('email').hasError('required')\"> Поле \"Почта\" обязательно </mat-error>\n          <mat-error *ngIf=\"form.get('email').hasError('email')\"> Введите поле \"Почта\" в формате email@email.com </mat-error>\n        </div>\n      </mat-form-field>\n\n      <mat-form-field>\n        <input matInput placeholder=\"Новый пароль\" [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" required />\n        <mat-icon matSuffix (click)=\"hide = !hide\">{{ hide ? \"visibility\" : \"visibility_off\" }}</mat-icon>\n\n        <div class=\"errors-container\" *ngIf=\"form.get('password').touched && form.get('password').invalid\">\n          <mat-error *ngIf=\"form.get('password').hasError('required')\"> Поле \"Пароль\" обязательно </mat-error>\n        </div>\n      </mat-form-field>\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"form.invalid || submitted\">Log In</button>\n  </form>\n</div>\n\n<app-footer></app-footer>\n","export * from './electronic-textbook.component';\n","export * from './components';\nexport { CoreModule } from './core.module';\n","export const GAMES_NAME = [\n  { name: 'savanna', label: 'Саванна' },\n  { name: 'audio-call', label: 'Аудиовызов' },\n  { name: 'type-me', label: 'Type Me' },\n];\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthAgainGuard implements CanActivate {\n  constructor(private auth: AuthService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    const isAuthenticated = this.auth.isAuthenticated();\n    if (isAuthenticated) {\n      this.router.navigate(['/text-book']);\n    } else {\n      return true;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\n@NgModule({\n  exports: [\n    MatDividerModule,\n    MatCardModule,\n    MatListModule,\n    MatIconModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatSelectModule,\n    MatTabsModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatExpansionModule,\n    MatDialogModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatPaginatorModule,\n    MatSlideToggleModule,\n  ],\n})\nexport class MaterialModule {}\n","export * from './page-not-found.component';\n","export * from './login';\nexport * from './registration';\n","import {EventEmitter, Injectable} from '@angular/core';\n\nimport {IUser} from '../models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  updateUser: EventEmitter<IUser> = new EventEmitter<IUser>();\n\n  setUser(user: IUser): void {\n    this.updateUser.emit(user);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { LoginComponent } from './login.component';\nimport { SharedModule } from '../../shared';\nimport { RouterModule } from '@angular/router';\nimport { AuthAgainGuard } from '../../shared/services/authAgain.guard';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: LoginComponent,\n        canActivate: [AuthAgainGuard],\n      },\n    ]),\n  ],\n  declarations: [LoginComponent],\n})\nexport class LoginModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport {\n  IAggregatedWord,\n  IAggregatedWordResponse,\n  IStatsMiniGamesResponse,\n  IUserSetting,\n  IUsersWords,\n  IUserUpdate,\n  IUserUpdateResponse,\n  IWord,\n} from '../models';\n\nimport { API_URL } from '../constants';\nimport { AggregatedFilter, Group, Page } from '../types';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  private url: string = API_URL;\n  private id = '';\n\n  constructor(private http: HttpClient) {}\n\n  updateUser(user: IUserUpdate): Observable<IUserUpdateResponse> {\n    return this.http.put<IUserUpdateResponse>(`${this.url}/users/${this.id}`, user);\n  }\n\n  deleteUser(): Observable<void> {\n    return this.http.delete<void>(`${this.url}/users/${this.id}`);\n  }\n\n  getWords(group: Group = 0, page: Page = 0): Observable<Array<IWord>> {\n    let params = new HttpParams();\n    params = params.append('group', group.toString());\n    params = params.append('page', page.toString());\n    return this.http.get<Array<IWord>>(`${this.url}/words`, { params });\n  }\n\n  getUserWords(): Observable<Array<IUsersWords>> {\n    return this.http.get<Array<IUsersWords>>(`${this.url}/users/${this.id}/words`);\n  }\n\n  createUserWordByWordId(wordId: string, word: IUsersWords): Observable<IUsersWords> {\n    return this.http.post<IUsersWords>(`${this.url}/users/${this.id}/words/${wordId}`, word);\n  }\n\n  getUserWordByWordId(wordId: string): Observable<IUsersWords> {\n    return this.http.get<IUsersWords>(`${this.url}/users/${this.id}/words/${wordId}`);\n  }\n\n  updateUserWordByWordId(wordId: string, word: IUsersWords): Observable<IUsersWords> {\n    return this.http.put<IUsersWords>(`${this.url}/users/${this.id}/words/${wordId}`, word);\n  }\n\n  deleteUserWordByWordId(wordId: string): Observable<void> {\n    return this.http.delete<void>(`${this.url}/users/${this.id}/words/${wordId}`);\n  }\n\n  getUserAggregatedWords(\n    filter?: AggregatedFilter,\n    wordsPerPage?: number | null,\n    group?: number,\n  ): Observable<Array<IAggregatedWordResponse>> {\n    let params = new HttpParams();\n\n    if (wordsPerPage) {\n      params = params.append('wordsPerPage', wordsPerPage.toString());\n    }\n\n    if (group) {\n      params = params.append('group', group.toString());\n    }\n\n    if (filter) {\n      params = params.append('filter', JSON.stringify(filter));\n    }\n    return this.http.get<Array<IAggregatedWordResponse>>(`${this.url}/users/${this.id}/aggregatedWords/`, {\n      params,\n    });\n  }\n\n  getUserAggregatedWordByWordId(wordId: string): Observable<IAggregatedWord> {\n    return this.http.get<IAggregatedWord>(`${this.url}/users/${this.id}/aggregatedWords/${wordId}`);\n  }\n\n  getUserSettings(): Observable<IUserSetting> {\n    return this.http.get<IUserSetting>(`${this.url}/users/${this.id}/settings`);\n  }\n\n  updateUserSettings(setting: IUserSetting): Observable<IUserSetting> {\n    return this.http.put<IUserSetting>(`${this.url}/users/${this.id}/settings`, setting);\n  }\n\n  setUserSettings(settings: IUserSetting): Observable<IUserSetting> {\n    return this.http.post<IUserSetting>(`${this.url}/users/${this.id}/settings`, settings);\n  }\n\n  getUserStatistics(): Observable<IStatsMiniGamesResponse> {\n    return this.http.get<IStatsMiniGamesResponse>(`${this.url}/users/${this.id}/statistics`);\n  }\n\n  updateUserStatistics(statistic: IStatsMiniGamesResponse): Observable<IStatsMiniGamesResponse> {\n    return this.http.put<IStatsMiniGamesResponse>(`${this.url}/users/${this.id}/statistics`, statistic);\n  }\n\n  setUserId(id: string): void {\n    this.id = id;\n  }\n\n  getDateNum(): number {\n    const date = new Date(Date.now());\n    return Number(\n      new Date(date.getFullYear(), date.getMonth(), date.getDate())\n        .toLocaleString('ru', {\n          year: '2-digit',\n          month: '2-digit',\n          day: '2-digit',\n        })\n        .split('.')\n        .join(''),\n    );\n  }\n  updateUserStatisticsByGame(game: string, wordsId: string[], answers: string[]): void {\n    const dateNum = this.getDateNum();\n    const games = ['audioCall', 'savannah', 'sprint', 'ownGame'];\n    const nameGames = games.filter((item) => item !== game);\n    this.getUserStatistics().subscribe(\n      (stats) => {\n        if (stats.optional) {\n          const w = stats.optional[game]?.words || [];\n          w.push({\n            timeStamp: dateNum,\n            wordsId: wordsId,\n            answers: answers,\n          });\n\n          const updateStats: IStatsMiniGamesResponse = {\n            optional: {\n              [game]: { words: w },\n              [nameGames[0]]: stats.optional[nameGames[0]],\n              [nameGames[1]]: stats.optional[nameGames[1]],\n              [nameGames[2]]: stats.optional[nameGames[2]],\n            },\n          };\n          this.updateUserStatistics(updateStats).subscribe(\n            (res) => {\n              console.log(res.optional[game]);\n            },\n            (error) => {\n              console.log(error);\n            },\n          );\n        } else {\n          const w = [];\n          w.push({\n            timeStamp: dateNum,\n            wordsId: wordsId,\n            answers: answers,\n          });\n\n          const updateStats: IStatsMiniGamesResponse = {\n            optional: {\n              [game]: { words: w },\n            },\n          };\n          this.updateUserStatistics(updateStats).subscribe(\n            (res) => {\n              console.log(res.optional[game]);\n            },\n            (error) => {\n              console.log(error);\n            },\n          );\n        }\n      },\n      (error) => {\n        const w = [];\n        w.push({\n          timeStamp: dateNum,\n          wordsId: wordsId,\n          answers: answers,\n        });\n\n        const updateStats: IStatsMiniGamesResponse = {\n          optional: {\n            [game]: { words: w },\n          },\n        };\n        this.updateUserStatistics(updateStats).subscribe(\n          (res) => {\n            console.log(res.optional[game]);\n          },\n          (error) => {\n            console.log(error);\n          },\n        );\n      },\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MainLayoutComponent } from './components/main-layout';\nimport { PageNotFoundComponent } from './components/page-not-found';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../shared';\n\n@NgModule({\n  imports: [CommonModule, SharedModule],\n  declarations: [MainLayoutComponent, PageNotFoundComponent],\n  exports: [],\n  providers: [],\n})\nexport class CoreModule {}\n","export * from './header.component';\n","export { MaterialModule } from './material.module';\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './shared';\nimport { ElectronicTextbookComponent } from './electronic-textbook';\nimport { MainLayoutComponent } from './core/';\nimport { PageNotFoundComponent } from './core';\nimport { HomePageComponent } from './home-page';\nimport { AboutUsComponent } from './about-us/about-us.component';\n\nconst appRoutes: Routes = [\n  {\n    path: 'login',\n    loadChildren: () => import('./auth/login/login.module').then((m) => m.LoginModule),\n  },\n  {\n    path: 'registration',\n    loadChildren: () => import('./auth/registration/registration.module').then((m) => m.RegistrationModule),\n  },\n  {\n    path: '',\n    component: MainLayoutComponent,\n    children: [\n      { path: 'text-book', component: ElectronicTextbookComponent },\n      {\n        path: 'statistics',\n        canActivate: [AuthGuard],\n        loadChildren: () => import('./statistics/statistics.module').then((m) => m.StatisticsModule),\n      },\n      { path: 'about-us', component: AboutUsComponent },\n      {\n        path: 'dictionary',\n        loadChildren: () => import('./dictionary/dictionary.module').then((m) => m.DictionaryModule),\n      },\n      { path: 'words-list', loadChildren: () => import('./words-list/words-list.module').then((m) => m.WordsListModule) },\n      { path: '', component: HomePageComponent },\n    ],\n  },\n  {\n    path: 'mini-games',\n    loadChildren: () => import('./mini-games/mini-games.module').then((m) => m.MiniGamesModule),\n  },\n  {\n    path: '**',\n    component: PageNotFoundComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'app-main-layout',\n\ttemplateUrl: './main-layout.component.html',\n\tstyleUrls: ['./main-layout.component.scss'],\n})\nexport class MainLayoutComponent {\n\tconstructor() {}\n}\n","<div class=\"container\">\n  <app-header></app-header>\n  <router-outlet></router-outlet>\n  <app-footer></app-footer>\n</div>\n","export * from './registration.component';\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\n\nexport class PasswordFormatValidator {\n  static passFormat(): ValidatorFn {\n    const regexp = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[-+_@$!%*?&#.,;:])[A-Za-z\\d-+_@$!%*?&#.,;:]{8,10000}$/;\n    return (inputControl: AbstractControl): { [key: string]: boolean } | null => {\n      if (regexp.test(inputControl.value)) {\n        return null;\n      }\n      return { passFormat: true };\n    };\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'app-page-not-found',\n\ttemplateUrl: './page-not-found.component.html',\n\tstyleUrls: ['./page-not-found.component.scss'],\n})\nexport class PageNotFoundComponent {\n\tconstructor() {}\n}\n","<div>\n  <aside><img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/4424790/Mirror.png\" alt=\"404 Image\" /></aside>\n  <main>\n    <h1>Sorry!</h1>\n    <p>Either you aren't cool enough to visit this page or it doesn't exist <em>. . . like your social life.</em></p>\n    <button routerLink=\"/\">You can go now!</button>\n  </main>\n</div>\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\n\nexport class MismatchValidator {\n  static mismatch(otherInputControl: AbstractControl): ValidatorFn {\n    return (inputControl: AbstractControl): { [key: string]: boolean } | null => {\n      if (inputControl.value !== undefined && inputControl.value?.trim() != '' && inputControl.value !== otherInputControl.value) {\n        return { mismatch: true };\n      }\n      return null;\n    };\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}