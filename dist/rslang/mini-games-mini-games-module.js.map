{"version":3,"sources":["./src/app/mini-games/savanna/savanna-child/savanna-child.component.ts","./src/app/mini-games/savanna/savanna-child/savanna-child.component.html","./src/app/shared/services/common-functions.service.ts","./src/app/mini-games/mini-games.module.ts","./src/app/mini-games/components/game-first-modal/game-first-modal.component.ts","./src/app/mini-games/components/game-first-modal/game-first-modal.component.html","./src/app/mini-games/mini-games-routing.module.ts","./src/app/mini-games/audiocall/main-audio-call/main-audio-call.component.ts","./src/app/mini-games/audiocall/main-audio-call/main-audio-call.component.html","./src/app/mini-games/type-me/main-type-me/main-type-me.component.ts","./src/app/mini-games/type-me/main-type-me/main-type-me.component.html","./src/app/mini-games/type-me/type-me/type-me.component.ts","./src/app/mini-games/type-me/type-me/type-me.component.html","./src/app/mini-games/type-me/item-type-me/item-type-me.component.ts","./src/app/mini-games/type-me/item-type-me/item-type-me.component.html","./src/app/mini-games/savanna/savanna.component.ts","./src/app/mini-games/savanna/savanna.component.html","./src/app/mini-games/audiocall/item-audio-call/item-audio-call.component.ts","./src/app/mini-games/audiocall/item-audio-call/item-audio-call.component.html","./src/app/mini-games/services/game-utils.service.ts","./src/app/mini-games/mini-games.component.ts","./src/app/mini-games/mini-games.component.html","./src/app/mini-games/animations/savanna-animations.ts","./src/app/mini-games/audiocall/audio-call/audio-call.component.ts","./src/app/mini-games/audiocall/audio-call/audio-call.component.html","./src/app/mini-games/components/game-results-modal/game-results-modal.component.ts","./src/app/mini-games/components/game-results-modal/game-results-modal.component.html"],"names":[],"mappings":"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","file":"mini-games-mini-games-module.js","sourcesContent":["import { Component, ElementRef, Input, OnInit, EventEmitter, Output, OnDestroy, HostListener } from '@angular/core';\nimport { IGameAnswer } from '../../models/game.model';\nimport { moveTargetWord } from '../../animations/savanna-animations';\nimport { IWord } from 'src/app/shared/models/word.model';\nimport { GameUtilsService } from '../../services/game-utils.service';\n\n@Component({\n  selector: 'app-savanna-child',\n  templateUrl: './savanna-child.component.html',\n  styleUrls: ['./savanna-child.component.scss'],\n  animations: [moveTargetWord],\n})\nexport class SavannaChildComponent implements OnInit, OnDestroy {\n  @Input() heartsCount!: number;\n  @Input() words!: IWord[];\n  @Output() passAnswer = new EventEmitter<IGameAnswer>();\n  @Output() isGameEnd = new EventEmitter<boolean>();\n\n  changeWordsInterval!: NodeJS.Timeout;\n  englishWords: string[];\n  russianWords: string[];\n  // the word that comes down from top\n  targetWord!: string;\n  answer!: string;\n  options: string[] = Array(4).fill('');\n  // the count is used to count \"targetWord\"s\n  count = 0;\n  choosenButton!: Element;\n  correctButton!: Element;\n  // component pass this object to the savanna component\n  gameAnswer: IGameAnswer = {\n    isCorrect: true,\n    answer: {\n      answer: '',\n      answerTranslate: '',\n    },\n    audio: '',\n  };\n  // the buttons should be disabled after first button click event\n  isClicked = false;\n  // targetWord has animation targetWord may be three different states 'top', 'bottom', 'answered'\n  // default state is 'top'\n  targetWordState = 'top';\n  choosenOption = '';\n  // these sounds will play after user choose any option or when \"targetWord\"s state is 'bottom'\n  correctSound = new Audio();\n  wrongSound = new Audio();\n\n  constructor(private el: ElementRef, private gameUtils: GameUtilsService) {}\n\n  ngOnInit(): void {\n    this.correctSound.src = '../../../../assets/savanna-game/correct.wav';\n    this.wrongSound.src = '../../../../assets/savanna-game/wrong.wav';\n\n    this.englishWords = this.words.map((wordObj) => wordObj.word);\n    this.russianWords = this.words.map((wordObj) => wordObj.wordTranslate);\n\n    // we begin new interval tochange words and animation states\n    this.beginNewInterval();\n  }\n\n  // when component is destroyed, interval should stop.\n  ngOnDestroy(): void {\n    clearInterval(this.changeWordsInterval);\n  }\n\n  beginNewInterval() {\n    // targetWord's state changes during the game('bottom', 'answered')\n    // we have to assign  value 'top' to the targetWordState beginning new interval\n    this.targetWordState = 'top';\n    // when the state of targetWord is 'answered' , we begin new interwal\n    // so that we have to clear old interval\n    clearInterval(this.changeWordsInterval);\n\n    // when the state of targetWord is 'answered' or 'bottom', our buttons takes styles\n    // these styles should be visible as timeout value(0.5 second in our case)\n    setTimeout(() => {\n      // in the beginning of the game state of targetWord is 'top'\n      // animation starts when the state changes so we change the state after 0.5 second\n      // otherwise animaton starts after five second\n\n      this.targetWordState = 'bottom';\n      // change targetWord and options' values\n      // otherwise they will be changed after five second\n      this.changeWord();\n      this.options = this.gameUtils.shuffleArray(this.makeOptions());\n\n      // setInterval to change targetWord and options\n      this.changeWordsInterval = setInterval(() => {\n        // animation works only once\n        // in order to make animation infinite we should change animation state every exact time\n        this.changeAnimationState();\n        this.changeWord();\n        this.options = this.gameUtils.shuffleArray(this.makeOptions());\n        // in order to animation happen we need tick\n        setTimeout(() => {\n          this.changeAnimationState();\n        }, 0);\n      }, 7500);\n    }, 1000);\n  }\n\n  changeAnimationState() {\n    if (this.targetWordState === 'top') {\n      this.targetWordState = 'bottom';\n    } else {\n      // when user doesn't choose any option we do\n      this.inCaseTheAnswerFalse();\n      this.targetWordState = 'top';\n    }\n  }\n\n  // this function is called every round of the game\n  // this function changes targetword and removes old button styles\n  changeWord() {\n    this.isClicked = false;\n    this.gameUtils.removeStyles(this.choosenButton);\n    this.gameUtils.removeStyles(this.correctButton);\n    this.targetWord = this.englishWords[this.count++];\n\n    // if words count graeter than or equal 21 the 'changeWordsInterval' should be cleared;\n    if (this.count >= 21) {\n      this.count = 0;\n      this.isGameEnd.emit(true);\n      clearInterval(this.changeWordsInterval);\n    }\n  }\n\n  // every game has four different option and one of them is answer\n  makeOptions() {\n    let options: string[] = [];\n\n    // since 'this.russianWords' must not change, we copy russianWords from 'this.russianWords'\n    let russianWords = [...this.russianWords];\n\n    // find answer from english words array\n    this.answer = this.words.find((word) => {\n      return word.word === this.targetWord;\n    }).wordTranslate;\n\n    // we should remove answer from russianWords, because it must not be duplicated in the options.\n    russianWords.splice(\n      russianWords.findIndex((word) => word === this.answer),\n      1,\n    );\n\n    // make random options and then push the answer\n    [options[0], options[1], options[2]] = this.gameUtils.shuffleArray(russianWords);\n    options.push(this.answer);\n\n    return options;\n  }\n\n  // the game must work with special keys also\n  @HostListener('window:keydown', ['$event'])\n  checkOnKeyboardEvent(event: KeyboardEvent) {\n    let key = +event.key;\n    // we have only four posssible keys\n    if (!this.isClicked) {\n      if (key === 1 || key === 2 || key === 3 || key === 4) {\n        this.choosenButton = this.el.nativeElement.querySelectorAll('.option-word button')[key - 1];\n        this.checkAnswer();\n      }\n    }\n  }\n\n  checkOnClickEvent(event: MouseEvent) {\n    this.choosenButton = event.target as Element;\n    this.checkAnswer();\n  }\n\n  checkAnswer() {\n    // make buttons disabled\n    this.isClicked = true;\n\n    // options structure : \"{{ i + 1 }}. {{ option }}\" , we should remove '{{ i + 1 }}. '.\n    this.choosenOption = this.choosenButton.textContent?.slice(3).trim() || \"You haven't choosen.\";\n    if (this.choosenOption === this.answer) {\n      this.inCaseTheAnswerTrue();\n    } else {\n      this.inCaseTheAnswerFalse();\n    }\n\n    // when the state of targetWord is 'answered', targetWord moves to the top(itselves default place).\n    this.targetWordState = 'answered';\n\n    // in order to animation happen we need tick\n    setTimeout(() => {\n      this.beginNewInterval();\n    }, 0);\n  }\n\n  inCaseTheAnswerTrue() {\n    this.correctSound.play();\n    this.choosenButton.classList.add('correct');\n    this.passGameAnswer(true);\n  }\n\n  inCaseTheAnswerFalse() {\n    if (this.heartsCount === 1) {\n      clearInterval(this.changeWordsInterval);\n\n      this.isGameEnd.emit(true);\n    } else {\n      this.wrongSound.play();\n      this.correctButton = Array.from(this.el.nativeElement.querySelectorAll('.option-word button') as Element[]).find(\n        (button: Element) => {\n          return button.textContent?.slice(3).trim() === this.answer;\n        },\n      ) as Element;\n\n      this.correctButton.classList.add('correct');\n\n      if (this.choosenButton) {\n        this.choosenButton.classList.add('incorrect');\n      }\n    }\n\n    this.passGameAnswer(false);\n  }\n\n  passGameAnswer(isCorrect: boolean) {\n    this.gameAnswer.isCorrect = isCorrect;\n    this.gameAnswer.answer = {\n      answer: this.answer,\n      answerTranslate: this.targetWord,\n    };\n    this.gameAnswer.audio = this.gameUtils.findAudio(this.answer, this.words);\n    this.passAnswer.emit(this.gameAnswer);\n  }\n}\n","<div class=\"savanna-game-wrapper\">\n  <div class=\"target-word\" [@moveTargetWord]=\"targetWordState\">\n    {{ targetWord }}\n  </div>\n  <div class=\"option-words\">\n    <div class=\"option-word\" *ngFor=\"let option of options; let i = index\">\n      <button (click)=\"checkOnClickEvent($event)\" [disabled]=\"isClicked\">{{ i + 1 }}. {{ option }}</button>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { IUsersWords, IWord } from '../models';\nimport { takeUntil } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CommonFunctionsService {\n  url = 'https://dispet.github.io/rslang-data/';\n\n  constructor() {}\n\n  playAudio(url: string): void {\n    const audio = new Audio();\n    audio.src = this.url + url;\n    audio.load();\n    audio.play();\n    audio.addEventListener('ended', function () {\n      if (audio.duration === audio.currentTime) {\n        audio.play();\n        audio.pause();\n        audio.currentTime = 0.0;\n      }\n    });\n  }\n\n  getRandomWords(arr: IWord[], wordsCount: number): IWord[] {\n    const result: IWord[] = [];\n    let length = arr.length;\n    if (wordsCount > length) {\n      // для вывода информации в консоль при разработке\n      console.error('Заданное количество слов для теста превышает предоставленный набор');\n    }\n    while (wordsCount) {\n      let x = Math.floor(Math.random() * length);\n      if (!result.includes(arr[x])) {\n        result.push(arr[x]);\n        wordsCount--;\n      }\n    }\n    return result;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../shared';\nimport { MaterialModule } from '../material';\nimport { MiniGamesRoutingModule } from './mini-games-routing.module';\nimport { GameUtilsService } from './services/game-utils.service';\n\nimport { GameFirstModalComponent } from './components/game-first-modal/game-first-modal.component';\nimport { GameResultsModalComponent } from './components/game-results-modal/game-results-modal.component';\nimport { MiniGamesComponent } from './mini-games.component';\nimport { ItemAudioCallComponent } from './audiocall/item-audio-call/item-audio-call.component';\nimport { AudioCallComponent } from './audiocall/audio-call/audio-call.component';\nimport { MainAudioCallComponent } from './audiocall/main-audio-call/main-audio-call.component';\nimport { SavannaComponent } from './savanna/savanna.component';\nimport { SavannaChildComponent } from './savanna/savanna-child/savanna-child.component';\nimport { TypeMeComponent } from './type-me/type-me/type-me.component';\nimport { ItemTypeMeComponent } from './type-me/item-type-me/item-type-me.component';\nimport { MainTypeMeComponent } from './type-me/main-type-me/main-type-me.component';\n\n@NgModule({\n  declarations: [\n    AudioCallComponent,\n    MiniGamesComponent,\n    ItemAudioCallComponent,\n    MainAudioCallComponent,\n    GameFirstModalComponent,\n    SavannaChildComponent,\n    TypeMeComponent,\n    ItemTypeMeComponent,\n    MainTypeMeComponent,\n    SavannaComponent,\n  ],\n  imports: [MiniGamesRoutingModule, SharedModule, MaterialModule, RouterModule],\n  entryComponents: [GameResultsModalComponent],\n  providers: [GameUtilsService],\n})\nexport class MiniGamesModule {}\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { Group } from 'src/app/shared/types';\nimport { IGameInfo } from '../../models/game.model';\n\n@Component({\n  selector: 'app-game-first-modal',\n  templateUrl: './game-first-modal.component.html',\n  styleUrls: ['./game-first-modal.component.scss'],\n})\nexport class GameFirstModalComponent implements OnInit {\n  @Output() passGameLevel = new EventEmitter<Group>();\n  @Input() info!: IGameInfo;\n\n  difficultyGroups = [1, 2, 3, 4, 5, 6];\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  chooseGameLevel(group: Number) {\n    this.passGameLevel.emit((+group - 1) as Group);\n  }\n}\n","<div class=\"first-modal\">\n  <div class=\"modal-window\">\n    <div class=\"game-info\">\n      <h1 class=\"title\">{{ info.name }}</h1>\n      <div class=\"info\">{{ info.info }}</div>\n    </div>\n    <hr />\n    <div>\n      <p>Выберите уровень</p>\n      <div class=\"choose-difficulty-level\">\n        <button *ngFor=\"let group of difficultyGroups\" (click)=\"chooseGameLevel(group)\">{{ group }}</button>\n        <button class=\"learned-words\">Изучаемые слова</button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MiniGamesComponent } from './mini-games.component';\nimport { AudioCallComponent } from './audiocall/audio-call/audio-call.component';\nimport { MainAudioCallComponent } from './audiocall/main-audio-call/main-audio-call.component';\nimport { SavannaComponent } from './savanna/savanna.component';\nimport { TypeMeComponent } from './type-me/type-me/type-me.component';\nimport { MainTypeMeComponent } from './type-me/main-type-me/main-type-me.component';\n\nconst routes: Routes = [\n  { path: 'savanna', component: SavannaComponent },\n  { path: 'audio-call', component: MainAudioCallComponent },\n  { path: 'audio-call/:group', component: AudioCallComponent },\n  { path: 'audio-call/:group/:page', component: AudioCallComponent },\n  { path: 'type-me', component: MainTypeMeComponent },\n  { path: 'type-me/:group', component: TypeMeComponent },\n  { path: 'type-me/:group/:page', component: TypeMeComponent },\n  { path: '', component: MiniGamesComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MiniGamesRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-audio-call',\n  templateUrl: './main-audio-call.component.html',\n  styleUrls: ['./main-audio-call.component.scss'],\n})\nexport class MainAudioCallComponent implements OnInit {\n  readonly groupsAmount: Array<number> = [1, 2, 3, 4, 5, 6];\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<app-header></app-header>\n<div class=\"mini-games\">\n  <div class=\"game-cards\">\n    <mat-card *ngFor=\"let group of groupsAmount\">\n      <img mat-card-image src=\"../../assets/icons/level_{{ group }}.svg\" alt=\"Уровень {{ group }}\" />\n      <mat-card-actions>\n        <button mat-button [routerLink]=\"['/mini-games', 'audio-call', group]\">Выбрать</button>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-type-me',\n  templateUrl: './main-type-me.component.html',\n  styleUrls: ['./main-type-me.component.scss'],\n})\nexport class MainTypeMeComponent implements OnInit {\n  readonly groupsAmount: Array<number> = [1, 2, 3, 4, 5, 6];\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<app-header></app-header>\n<div class=\"mini-games\">\n  <div class=\"game-cards\">\n    <mat-card *ngFor=\"let group of groupsAmount\">\n      <img mat-card-image src=\"../../assets/icons/level_{{ group }}.svg\" alt=\"Уровень {{ group }}\" />\n      <mat-card-actions>\n        <button mat-button [routerLink]=\"['/mini-games', 'type-me', group]\">Выбрать</button>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { IUsersWords, IWord } from '../../../shared/models';\nimport { ApiService } from '../../../shared/services';\nimport { ActivatedRoute } from '@angular/router';\nimport { takeUntil } from 'rxjs/operators';\nimport { CommonFunctionsService } from '../../../shared/services/common-functions.service';\n\n@Component({\n  selector: 'app-type-me',\n  templateUrl: './type-me.component.html',\n  styleUrls: ['./type-me.component.scss'],\n})\nexport class TypeMeComponent implements OnInit, OnDestroy {\n  private groupFromUrl: number;\n  private pageFromUrl: number;\n  private destroy$: ReplaySubject<any> = new ReplaySubject<any>();\n  private answersForStatistic: string[] = [];\n  readonly MAX_WORDS_COUNT = 7;\n  answersCounter = 0;\n  resultCounter = 0;\n  words: IWord[];\n\n  constructor(private apiService: ApiService, private route: ActivatedRoute, private commonFunctions: CommonFunctionsService) {}\n\n  ngOnInit(): void {\n    this.loadDataFromRoute();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  loadDataFromRoute() {\n    this.route.paramMap.pipe(takeUntil(this.destroy$)).subscribe((params) => {\n      this.groupFromUrl = +params.get('group');\n      this.pageFromUrl = +params.get('page');\n      if (this.groupFromUrl && this.pageFromUrl) {\n        this.getWords(this.groupFromUrl - 1, this.groupFromUrl - 1);\n      } else if (this.groupFromUrl) {\n        const pageNumber = Math.floor(Math.random() * 30) - 1;\n        this.getWords(this.groupFromUrl - 1, pageNumber);\n      } else {\n        this.getWords(1, 1);\n      }\n    });\n  }\n\n  getWords(group, page) {\n    this.apiService\n      .getWords(group, page)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (words) => {\n          this.words = this.commonFunctions.getRandomWords(words, this.MAX_WORDS_COUNT);\n        },\n        (error) => console.error(error),\n      );\n  }\n\n  getAnswer(isTrue: number): void {\n    ++this.answersCounter;\n    this.resultCounter += isTrue;\n    if (isTrue) {\n      this.answersForStatistic.push('true');\n    } else {\n      this.answersForStatistic.push('false');\n    }\n  }\n\n  sendDate(): void {\n    this.sendStatistic();\n    this.sendWordsForStudying();\n  }\n\n  sendStatistic() {\n    let arrIds: string[] = [];\n    this.words.map((word) => arrIds.push(word.id));\n    this.apiService.updateUserStatisticsByGame('ownGame', arrIds, this.answersForStatistic);\n  }\n\n  sendWordsForStudying() {\n    const body: IUsersWords = {\n      difficulty: 'normal',\n      optional: {\n        learned: true,\n      },\n    };\n    this.words.map((word) => this.apiService.createUserWordByWordId(word.id, body).pipe(takeUntil(this.destroy$)).subscribe());\n  }\n}\n","<app-header></app-header>\n<div *ngIf=\"words; else loading\">\n  <mat-tab-group dynamicHeight backgroundColor=\"primary\">\n    <mat-tab label=\"{{ i + 1 }}\" *ngFor=\"let word of words; let i = index\">\n      <div class=\"example-large-box mat-elevation-z4\">\n        <app-item-type-me [word]=\"word\" (answer)=\"getAnswer($event)\"></app-item-type-me>\n      </div>\n    </mat-tab>\n  </mat-tab-group>\n  <div>\n    <h3>Результат: {{ resultCounter }} / {{ MAX_WORDS_COUNT }}</h3>\n  </div>\n</div>\n<button *ngIf=\"answersCounter === MAX_WORDS_COUNT\" mat-raised-button color=\"primary\" (click)=\"sendDate()\">Сохранить результат</button>\n<ng-template #loading>Слова не загрузились</ng-template>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { IWord } from '../../../shared/models';\nimport { CommonFunctionsService } from '../../../shared/services/common-functions.service';\n\n@Component({\n  selector: 'app-item-type-me',\n  templateUrl: './item-type-me.component.html',\n  styleUrls: ['./item-type-me.component.scss'],\n})\nexport class ItemTypeMeComponent {\n  url = 'https://dispet.github.io/rslang-data/';\n  isAnswerButtonDisable = false;\n  correctAnswer = '';\n  isCorrect: number;\n  @Input() word: IWord;\n  @Output() answer = new EventEmitter<number>();\n\n  constructor(private commonFunctions: CommonFunctionsService) {}\n\n  playAudio(url: string): void {\n    this.commonFunctions.playAudio(url);\n  }\n\n  sendResult(answer: string) {\n    this.isCorrect = answer.toLowerCase().trim() === this.word.word ? 1 : 0;\n    this.isAnswerButtonDisable = true;\n    this.correctAnswer = this.word.word;\n    this.answer.emit(this.isCorrect);\n  }\n}\n","<div>\n  <img src=\"{{ url }}/{{ word.image }}\" alt=\"{{ word.word }}\" />\n  <button mat-icon-button (click)=\"playAudio(word.audio)\">\n    <mat-icon mat-list-icon>volume_up</mat-icon>\n  </button>\n  <span [ngClass]=\"isCorrect === 1 ? 'green' : 'red'\">{{ correctAnswer }}</span>\n  <hr />\n  <p>\n    <span [innerHTML]=\"word.wordTranslate\"></span>\n  </p>\n  <hr />\n  <form class=\"example-form\">\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Написание</mat-label>\n      <input matInput #answer id=\"answer\" name=\"answer\" />\n      <mat-hint align=\"start\"><strong>Напишите слово по-английски</strong> </mat-hint>\n    </mat-form-field>\n  </form>\n  <button mat-raised-button color=\"primary\" [disabled]=\"isAnswerButtonDisable\" (click)=\"sendResult(answer.value)\">Проверить</button>\n</div>\n","import { Component } from '@angular/core';\nimport { IGameAnswer, IGameAnswers, IGameInfo } from '../models/game.model';\nimport { flyTopDown } from '../animations/savanna-animations';\nimport { ApiService } from 'src/app/shared';\nimport { IWord } from 'src/app/shared/models';\nimport { Group, Page } from 'src/app/shared/types';\nimport { Observable } from 'rxjs';\n@Component({\n  selector: 'app-savanna',\n  templateUrl: './savanna.component.html',\n  styleUrls: ['./savanna.component.scss'],\n  animations: [flyTopDown],\n})\nexport class SavannaComponent {\n  displayFirstModal = true;\n  displayResultsModal = false;\n  words$!: Observable<IWord[]>;\n  isGameOver = false;\n  heartsCount = Array(5).fill('h');\n  game: IGameAnswers = {\n    correctAnswers: [],\n    incorrectAnswers: [],\n    correctAnswersTranslate: [],\n    incorrectAnswersTranslate: [],\n    correctAnswerAudios: [],\n    incorrectAnswerAudios: [],\n  };\n  savannaWrapperHeight = { height: '100%' };\n  private bgpY = '100%';\n  backgroundPositionY = { 'background-position-y': this.bgpY };\n  gameInfo: IGameInfo = {\n    name: 'Саванна',\n    info: 'Вы можете выбрать ответ с помощью цифр 1, 2, 3 или 4 на клавиатуре или с помощью мыши.',\n  };\n  constructor(private apiService: ApiService) {}\n\n  beginTheGame(level: Group) {\n    this.getChoosenGroupWords(level);\n    this.displayFirstModal = false;\n  }\n\n  recieveAnswer(answerObject: IGameAnswer) {\n    if (answerObject.isCorrect === false) {\n      this.decreaseHeart();\n      this.game.incorrectAnswers.push(answerObject.answer.answer);\n      this.game.incorrectAnswersTranslate.push(answerObject.answer.answerTranslate);\n      this.game.incorrectAnswerAudios.push(answerObject.audio);\n    } else {\n      this.game.correctAnswers.push(answerObject.answer.answer);\n      this.game.correctAnswersTranslate.push(answerObject.answer.answerTranslate);\n      this.game.correctAnswerAudios.push(answerObject.audio);\n    }\n    this.bgpY = `${+this.bgpY.replace(/\\%/g, '') - 5}%`;\n    this.backgroundPositionY = { 'background-position-y': this.bgpY };\n  }\n\n  closeResultsModal() {\n    this.savannaWrapperHeight = { height: '100%' };\n    this.displayFirstModal = false;\n  }\n\n  endGame() {\n    this.isGameOver = true;\n    this.openResultsModal();\n  }\n\n  private getChoosenGroupWords(level: Group) {\n    const randomPage = Math.floor(Math.random() * 20) as Page;\n    this.words$ = this.apiService.getWords(level, randomPage);\n  }\n\n  private openResultsModal() {\n    this.displayResultsModal = true;\n    this.savannaWrapperHeight = { height: '0%' };\n  }\n\n  private decreaseHeart() {\n    this.heartsCount.pop();\n    if (this.heartsCount.length === 0) {\n      this.endGame();\n    }\n  }\n}\n","<div class=\"savanna-game\" [ngStyle]=\"backgroundPositionY\">\n  <app-game-first-modal (passGameLevel)=\"beginTheGame($event)\" *ngIf=\"displayFirstModal\" [info]=\"gameInfo\"></app-game-first-modal>\n  <app-game-results-modal [data]=\"game\" *ngIf=\"displayResultsModal\"></app-game-results-modal>\n  <div class=\"savanna-wrapper\" *ngIf=\"!isGameOver && (words$ | async) as words\" [ngStyle]=\"savannaWrapperHeight\">\n    <div class=\"control\">\n      <div class=\"hearts\" *ngFor=\"let heart of heartsCount\">\n        <div class=\"heart\" [@flyTopDown]=\"'top'\">\n          <mat-icon>favorite</mat-icon>\n        </div>\n      </div>\n      <div class=\"exit\">\n        <button><a routerLink=\"../../mini-games\">&times;</a></button>\n      </div>\n    </div>\n    <app-savanna-child\n      (isGameEnd)=\"endGame($event)\"\n      (passAnswer)=\"recieveAnswer($event)\"\n      [heartsCount]=\"heartsCount.length\"\n      [words]=\"words\"\n    ></app-savanna-child>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { IWord } from '../../../shared/models';\nimport { CommonFunctionsService } from '../../../shared/services/common-functions.service';\n\n@Component({\n  selector: 'app-item-audio-call',\n  templateUrl: './item-audio-call.component.html',\n  styleUrls: ['./item-audio-call.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ItemAudioCallComponent {\n  isAnswerButtonDisable = false;\n  correctAnswer = '';\n  isCorrect: number;\n  @Input() getVariantsRu: string[];\n  @Input() word: IWord;\n  @Output() answer = new EventEmitter<number>();\n\n  constructor(private commonFunctions: CommonFunctionsService) {}\n\n  playAudio(url: string): void {\n    this.commonFunctions.playAudio(url);\n  }\n\n  sendResult(answer: string) {\n    this.isCorrect = answer === this.word.wordTranslate ? 1 : 0;\n    this.isAnswerButtonDisable = true;\n    this.correctAnswer = this.word.wordTranslate;\n    this.answer.emit(this.isCorrect);\n  }\n}\n","<div>\n  <button mat-icon-button (click)=\"playAudio(word.audio)\">\n    <mat-icon mat-list-icon>volume_up</mat-icon>\n  </button>\n  <span [ngClass]=\"isCorrect === 1 ? 'green' : 'red'\">{{ correctAnswer }}</span>\n  <hr />\n  <button\n    *ngFor=\"let variant of getVariantsRu; let i = index\"\n    mat-raised-button\n    color=\"basic\"\n    [disabled]=\"isAnswerButtonDisable\"\n    (click)=\"sendResult(variant)\"\n  >\n    {{ variant }}\n  </button>\n</div>\n","import { Injectable } from '@angular/core';\nimport { IWord } from 'src/app/shared/models';\n\n@Injectable()\nexport class GameUtilsService {\n  constructor() {}\n\n  findAudio(answerWord: string, words: IWord[]) {\n    let audioSrc = words.find((word) => {\n      return word.wordTranslate === answerWord;\n    }).audio;\n    return audioSrc;\n  }\n\n  // we use this function to shuffle options and change words position in words arrray\n  shuffleArray(array: string[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  }\n\n  removeStyles(button: Element) {\n    // button may be undefined at the beginning of the game\n    if (button) {\n      button.classList.remove('correct');\n      button.classList.remove('incorrect');\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { GAMES_NAME } from '../shared/constants';\n\n@Component({\n  selector: 'app-mini-games',\n  templateUrl: './mini-games.component.html',\n  styleUrls: ['./mini-games.component.scss'],\n})\nexport class MiniGamesComponent {\n  readonly gameNames = GAMES_NAME;\n  constructor() {}\n}\n","<app-header></app-header>\n<div class=\"mini-games\">\n  <div class=\"game-cards\">\n    <mat-card *ngFor=\"let game of gameNames\">\n      <mat-card-header>\n        <mat-card-title>{{ game.label }}</mat-card-title>\n      </mat-card-header>\n      <img mat-card-image src=\"../../assets/icons/{{ game.name }}.svg\" alt=\"{{ game.label }}\" />\n      <mat-card-actions>\n        <button mat-button routerLink=\"{{ game.name }}\">Играть</button>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n</div>\n<router-outlet></router-outlet>\n","import { trigger, state, style, animate, transition, keyframes } from '@angular/animations';\n\nexport const moveTargetWord = trigger('moveTargetWord', [\n  state('top', style({ top: '5%' })),\n  state('bottom', style({ top: '70%' })),\n  state('answered', style({ opacity: 0 })),\n  transition('top => bottom', animate('6000ms 500ms')),\n  transition('bottom => top', animate(1000)),\n  transition(\n    'answered => top',\n    animate(1000, keyframes([style({ opacity: 0, offset: 0 }), style({ opacity: 0, offset: 0.99 }), style({ opacity: 1, offset: 1 })])),\n  ),\n]);\n\nexport const flyTopDown = trigger('flyTopDown', [\n  state('top', style({ transform: 'translateY(0)' })),\n  transition('void <=> *', [style({ top: '-100%', fontSize: '50px', color: 'blue' }), animate(500)]),\n]);\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { IUsersWords, IWord } from '../../../shared/models';\nimport { ApiService } from '../../../shared/services';\nimport { ReplaySubject } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonFunctionsService } from '../../../shared/services/common-functions.service';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-audio-call',\n  templateUrl: './audio-call.component.html',\n  styleUrls: ['./audio-call.component.scss'],\n})\nexport class AudioCallComponent implements OnInit, OnDestroy {\n  private groupFromUrl: number;\n  private pageFromUrl: number;\n  private destroy$: ReplaySubject<any> = new ReplaySubject<any>();\n  readonly MAX_VARIANTS_COUNT = 4;\n  readonly MAX_WORDS_COUNT = 7;\n  answersCounter = 0;\n  resultCounter = 0;\n  rusVariantsSubArray: string[][];\n  rusVariantsArray: string[];\n  words: IWord[];\n  private answersForStatistic: string[] = [];\n\n  constructor(private apiService: ApiService, private route: ActivatedRoute, private commonFunctions: CommonFunctionsService) {}\n\n  ngOnInit(): void {\n    this.loadDataFromRoute();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n\n  loadDataFromRoute() {\n    this.route.paramMap.pipe(takeUntil(this.destroy$)).subscribe((params) => {\n      this.groupFromUrl = +params.get('group');\n      this.pageFromUrl = +params.get('page');\n      if (this.groupFromUrl && this.pageFromUrl) {\n        this.getWords(this.groupFromUrl - 1, this.groupFromUrl - 1);\n      } else if (this.groupFromUrl) {\n        const pageNumber = Math.floor(Math.random() * 30) - 1;\n        this.getWords(this.groupFromUrl - 1, pageNumber);\n      } else {\n        this.getWords(1, 1);\n      }\n    });\n  }\n\n  getWords(group, page) {\n    this.apiService\n      .getWords(group, page)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (words) => {\n          this.words = this.commonFunctions.getRandomWords(words, this.MAX_WORDS_COUNT);\n          this.rusVariantsArray = this.getAllVariantsRu(words);\n          this.rusVariantsSubArray = this.getVariantsRu(this.words, this.rusVariantsArray, this.MAX_VARIANTS_COUNT);\n        },\n        (error) => console.error(error),\n      );\n  }\n\n  getAllVariantsRu(words: IWord[]) {\n    const collectionWords = [];\n    for (let i = 0; i < words.length; i++) {\n      collectionWords.push(words[i].wordTranslate);\n    }\n    return collectionWords;\n  }\n\n  getVariantsRu(words: IWord[], allVariantsRu: string[], variantsCount: number) {\n    let length = allVariantsRu.length;\n    let resultArr: Array<string[]> = [];\n    for (let i = 0; i < words.length; i++) {\n      let result: string[] = [];\n      result.push(words[i].wordTranslate);\n      let n = variantsCount;\n      while (n - 1) {\n        let x = Math.floor(Math.random() * length);\n        if (!result.includes(allVariantsRu[x])) {\n          result.push(allVariantsRu[x]);\n          n--;\n        }\n      }\n      result.sort(function () {\n        return Math.random() - 0.5;\n      });\n      resultArr.push(result);\n    }\n    return resultArr;\n  }\n\n  getAnswer(isCorrect: number): void {\n    ++this.answersCounter;\n    this.resultCounter += isCorrect;\n    if (isCorrect) {\n      this.answersForStatistic.push('true');\n    } else {\n      this.answersForStatistic.push('false');\n    }\n  }\n\n  sendDate(): void {\n    this.sendStatistic();\n    this.sendWordsForStudying();\n  }\n\n  sendStatistic() {\n    let arrIds: string[] = [];\n    this.words.map((word) => arrIds.push(word.id));\n    this.apiService.updateUserStatisticsByGame('audioCall', arrIds, this.answersForStatistic);\n  }\n\n  sendWordsForStudying() {\n    const body: IUsersWords = {\n      difficulty: 'normal',\n      optional: {\n        learned: true,\n      },\n    };\n    this.words.map((word) => this.apiService.createUserWordByWordId(word.id, body).pipe(takeUntil(this.destroy$)).subscribe());\n  }\n}\n","<app-header></app-header>\n<div *ngIf=\"words; else loading\">\n  <mat-tab-group dynamicHeight>\n    <mat-tab label=\"{{ i + 1 }}\" *ngFor=\"let word of words; let i = index\">\n      <div class=\"example-large-box mat-elevation-z4\">\n        <app-item-audio-call [word]=\"word\" [getVariantsRu]=\"rusVariantsSubArray[i]\" (answer)=\"getAnswer($event)\"></app-item-audio-call>\n      </div>\n    </mat-tab>\n  </mat-tab-group>\n  <div>\n    <h3>Результат: {{ resultCounter }} / {{ MAX_WORDS_COUNT }}</h3>\n  </div>\n</div>\n<button *ngIf=\"answersCounter === MAX_WORDS_COUNT\" mat-raised-button color=\"primary\" (click)=\"sendStatistic()\">Сохранить результат</button>\n<ng-template #loading>Слова не загрузились</ng-template>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { IGameAnswers } from '../../models/game.model';\n\n@Component({\n  selector: 'app-game-results-modal',\n  templateUrl: './game-results-modal.component.html',\n  styleUrls: ['./game-results-modal.component.scss'],\n})\nexport class GameResultsModalComponent implements OnInit {\n  @Input() data!: IGameAnswers;\n  currentUrl = this.router.url;\n  correct: number;\n  incorrect: number;\n  feedback: string;\n  specificParts = '';\n  constructor(private router: Router) {}\n  ngOnInit(): void {\n    this.correct = this.data.correctAnswers.length;\n    this.incorrect = this.data.incorrectAnswers.length;\n\n    if (this.correct > 18) {\n      this.feedback = 'Отличный результат, не переставайте учиться!';\n    } else if (this.correct > 10 && this.correct < 18) {\n      this.feedback = 'Хороший результат, больше работай над собой.';\n    } else {\n      this.feedback = 'Узнайте больше и попробуйте еще раз.';\n    }\n  }\n\n  playWordAudio(audio: HTMLAudioElement) {\n    audio.play();\n  }\n\n  reload() {\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\n      this.router.navigate([this.currentUrl]);\n    });\n  }\n}\n","<div class=\"results-modal\">\n  <div class=\"modal-window\">\n    <div class=\"modal-content\">\n      <h1>Pезультат</h1>\n      <div class=\"specific-parts\">{{ specificParts }}</div>\n      <div class=\"feedback\">\n        <h2>{{ feedback }}</h2>\n      </div>\n      <div class=\"statistics\">{{ correct }} слов изучено, {{ incorrect }} не изучено.</div>\n      <div class=\"answers\">\n        <h2>ОШИБОК: {{ incorrect }}</h2>\n        <div class=\"incorrect-answers\" *ngFor=\"let answer of data.incorrectAnswers; let i = index\">\n          <div class=\"single-answer\">\n            <audio #incorrectAnswerAudio src=\"https://dispet.github.io/rslang-data/{{ data.incorrectAnswerAudios[i] }}\"></audio>\n            <mat-icon style=\"color: red\" (click)=\"playWordAudio(incorrectAnswerAudio)\">volume_up</mat-icon>\n            <div class=\"answer\" style=\"color: red\">\n              <b>{{ data.incorrectAnswersTranslate[i] }}</b> - {{ answer }}\n            </div>\n          </div>\n        </div>\n        <h2>ЗНАЮ: {{ correct }}</h2>\n        <div class=\"correct-answers\" *ngFor=\"let answer of data.correctAnswers; let i = index\">\n          <div class=\"single-answer\">\n            <audio #correctAnswerAudio src=\"https://dispet.github.io/rslang-data/{{ data.correctAnswerAudios[i] }}\"></audio>\n            <mat-icon style=\"color: green\" (click)=\"playWordAudio(correctAnswerAudio)\">volume_up</mat-icon>\n            <div style=\"color: green\" class=\"answer\">\n              <b>{{ data.correctAnswersTranslate[i] }}</b> - {{ answer }}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"action-buttons\">\n        <button mat-raised-button color=\"primary\" (click)=\"reload()\">Начать заново</button>\n        <button mat-raised-button color=\"primary\"><a routerLink=\"../../mini-games\">Вернуться к мини-играм</a></button>\n      </div>\n    </div>\n  </div>\n</div>\n"],"sourceRoot":"webpack:///"}