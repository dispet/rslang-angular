{"version":3,"sources":["./src/app/dictionary/hard-words/index.ts","./src/app/dictionary/words-in-learning/words-in-learning.component.ts","./src/app/dictionary/words-in-learning/words-in-learning.component.html","./src/app/dictionary/dictionary-routing.module.ts","./src/app/dictionary/dictionary.component.ts","./src/app/dictionary/dictionary.component.html","./src/app/dictionary/deleted-words/index.ts","./src/app/dictionary/words-in-learning/index.ts","./src/app/dictionary/deleted-words/deleted-words.component.ts","./src/app/dictionary/deleted-words/deleted-words.component.html","./src/app/dictionary/dictionary.module.ts","./src/app/dictionary/hard-words/hard-words.component.ts","./src/app/dictionary/hard-words/hard-words.component.html"],"names":[],"mappings":"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","file":"dictionary-dictionary-module.js","sourcesContent":["export * from './hard-words.component';\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { FacadeService } from 'src/app/state';\n\n@Component({\n  selector: 'app-words-in-learning',\n  templateUrl: './words-in-learning.component.html',\n  styleUrls: ['./words-in-learning.component.scss'],\n})\nexport class WordsInLearningComponent implements OnInit {\n  readonly wordsInLearning$ = this.stateFacade.wordsInLearning$;\n  readonly isLoading$ = this.stateFacade.isLoading$;\n\n\tconstructor(private stateFacade: FacadeService) {}\n\n  ngOnInit() {\n    this.loadLearningWords();\n  }\n\n  loadLearningWords() {\n    this.stateFacade.loadWordsInLearning().pipe(first()).subscribe();\n  }\n}\n","<div *ngIf=\"(wordsInLearning$ | async)?.length == 0\">\n  <h3>Страница пуста</h3>\n</div>\n\n<ng-template #content>\n  <mat-list>\n    <mat-list-item *ngFor=\"let item of wordsInLearning$ | async\">\n      <p matLine>\n        <span style=\"flex-grow: 1\">{{ item.word }} - {{ item.wordTranslate }}</span>\n        <span *ngIf=\"item.hard\" class=\"hard-indicator\">HARD</span>\n      </p>\n      <mat-divider></mat-divider>\n    </mat-list-item>\n  </mat-list>\n</ng-template>\n\n<mat-spinner *ngIf=\"isLoading$ | async; else content\"></mat-spinner>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DeletedWordsComponent } from './deleted-words';\nimport { DictionaryComponent } from './dictionary.component';\nimport { HardWordsComponent } from './hard-words';\nimport { WordsInLearningComponent } from './words-in-learning';\n\nconst routes: Routes = [\n  {path: '', component: DictionaryComponent,\n  children: [\n    {path: 'hard-words', component: HardWordsComponent},\n    {path: 'deleted-words', component: DeletedWordsComponent},\n    {path: 'words-in-learning', component: WordsInLearningComponent},\n    {path: '', redirectTo: 'words-in-learning', pathMatch: 'full'}\n  ],\n  }\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  declarations: [],\n  exports: [RouterModule],\n  providers: [],\n})\nexport class DictionaryRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'app-dictionary',\n\ttemplateUrl: './dictionary.component.html',\n\tstyleUrls: ['./dictionary.component.scss'],\n})\nexport class DictionaryComponent {\n\tconstructor() {}\n}\n","<div class=\"dictionary\">\n  <div class=\"navigation\">\n    <mat-button-toggle-group>\n      <mat-button-toggle value=\"app-words-in-learning\" routerLink=\"/dictionary/words-in-learning\">Изучаемые слова</mat-button-toggle>\n      <mat-button-toggle value=\"app-hard-words\" routerLink=\"/dictionary/hard-words\">Сложные слова</mat-button-toggle>\n      <mat-button-toggle value=\"app-deleted-words\" routerLink=\"/dictionary/deleted-words\">Удаленный слова</mat-button-toggle>\n    </mat-button-toggle-group>\n  </div>\n  <mat-divider></mat-divider>\n  <router-outlet></router-outlet>\n</div>\n","export * from './deleted-words.component';\n","export * from './words-in-learning.component';\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { DATA_URL } from 'src/app/shared';\nimport { playAudio } from 'src/app/shared/utils';\nimport { FacadeService } from 'src/app/state';\n\n@Component({\n  selector: 'app-deleted-words',\n  templateUrl: './deleted-words.component.html',\n  styleUrls: ['./deleted-words.component.scss'],\n})\nexport class DeletedWordsComponent implements OnInit {\n  readonly deletedWords$ = this.stateFacade.deletedWords$;\n  readonly isLoading$ = this.stateFacade.isLoading$;\n\n  readonly url = DATA_URL;\n\n\tconstructor(private stateFacade: FacadeService) {}\n\n  ngOnInit() {\n    this.loadDeletedWords();\n  }\n\n  loadDeletedWords() {\n    this.stateFacade.loadDeletedWords().pipe(first()).subscribe();\n  }\n\n  deleteWord(id: string) {\n    this.stateFacade.deleteUserWord(id);\n    this.loadDeletedWords();\n  }\n\n  playAudio(url1: string, url2: string, url3: string) {\n    playAudio(this.url, url1, url2, url3);\n  }\n}\n","<button type=\"button\" mat-button (click)=\"drawer.toggle()\">Выбрать игру</button>\n\n<mat-divider></mat-divider>\n\n<mat-drawer-container>\n  <mat-drawer #drawer position=\"end\">\n    <mat-button-toggle-group vertical>\n      <mat-button-toggle>Саванна</mat-button-toggle>\n      <mat-button-toggle>Аудиовызов</mat-button-toggle>\n      <mat-button-toggle>Спринт</mat-button-toggle>\n      <mat-button-toggle>Своя игра</mat-button-toggle>\n    </mat-button-toggle-group>\n  </mat-drawer>\n\n  <div *ngIf=\"(deletedWords$ | async)?.length == 0\">\n    <h3>Страница пуста</h3>\n  </div>\n\n  <ng-template #content>\n    <ul class=\"list\">\n      <li *ngFor=\"let item of deletedWords$ | async\" class=\"list-item\">\n        <div class=\"list-item-container\">\n          <div class=\"item-image\">\n            <img src=\"{{ url }}/{{ item.image }}\" alt=\"{{ item.word }}\" />\n          </div>\n          <div class=\"item-content\">\n            <div class=\"item-title\">\n              <button mat-icon-button (click)=\"playAudio(item.audio, item.audioMeaning, item.audioExample)\">\n                <mat-icon mat-list-icon>volume_up</mat-icon>\n              </button>\n              <span>\n                {{ item.word }}\n              </span>\n              <span>: {{ item.transcription }}</span>\n              <span> - {{ item.wordTranslate }}</span>\n            </div>\n            <div class=\"item-description\">\n              <p>\n                <span [innerHTML]=\"item.textMeaning\"></span>\n                <span> - {{ item.textMeaningTranslate }}</span>\n              </p>\n              <p>\n                <span [innerHTML]=\"item.textExample\"></span>\n                <span> - {{ item.textExampleTranslate }}</span>\n              </p>\n              <p>\n                {{ item.learningResults }}\n              </p>\n            </div>\n          </div>\n\n          <div class=\"item-controls\">\n            <button (click)=\"deleteWord(item._id)\">\n              <mat-icon>restore_from_trash</mat-icon>\n            </button>\n          </div>\n        </div>\n        <mat-divider></mat-divider>\n      </li>\n    </ul>\n  </ng-template>\n\n  <mat-spinner *ngIf=\"isLoading$ | async; else content\"></mat-spinner>\n</mat-drawer-container>\n","import { NgModule } from '@angular/core';\nimport { WordsInLearningComponent } from './words-in-learning';\nimport { HardWordsComponent } from './hard-words';\nimport { DeletedWordsComponent } from './deleted-words';\nimport { DictionaryComponent } from './dictionary.component';\nimport { DictionaryRoutingModule } from './dictionary-routing.module';\nimport { SharedModule } from '../shared';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule, SharedModule, DictionaryRoutingModule],\n  declarations: [WordsInLearningComponent, HardWordsComponent, DeletedWordsComponent, DictionaryComponent],\n  exports: [],\n  providers: [],\n})\nexport class DictionaryModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { DATA_URL } from 'src/app/shared';\nimport { playAudio } from 'src/app/shared/utils';\nimport { FacadeService } from 'src/app/state';\n\n@Component({\n\tselector: 'app-hard-words',\n\ttemplateUrl: './hard-words.component.html',\n\tstyleUrls: ['./hard-words.component.scss'],\n})\nexport class HardWordsComponent implements OnInit {\n  readonly hardWords$ = this.stateFacade.hardWords$;\n  readonly isLoading$ = this.stateFacade.isLoading$;\n\n  readonly url = DATA_URL;\n\n\tconstructor(private stateFacade: FacadeService) {}\n\n  ngOnInit() {\n    this.loadHardWords();\n  }\n\n  loadHardWords() {\n    this.stateFacade.loadHardWords().pipe(first()).subscribe();\n  }\n\n  deleteWord(id: string) {\n    this.stateFacade.deleteUserWord(id);\n    this.loadHardWords();\n  }\n\n  playAudio(url1: string, url2: string, url3: string) {\n    playAudio(this.url, url1, url2, url3);\n  }\n}\n","<button type=\"button\" mat-button (click)=\"drawer.toggle()\">Выбрать игру</button>\n\n<mat-drawer-container>\n  <mat-drawer #drawer position=\"end\">\n    <mat-button-toggle-group vertical>\n      <mat-button-toggle>Саванна</mat-button-toggle>\n      <mat-button-toggle>Аудиовызов</mat-button-toggle>\n      <mat-button-toggle>Спринт</mat-button-toggle>\n      <mat-button-toggle>Своя игра</mat-button-toggle>\n    </mat-button-toggle-group>\n  </mat-drawer>\n\n  <div *ngIf=\"(hardWords$ | async)?.length == 0\">\n    <h3>Страница пуста</h3>\n  </div>\n\n  <ng-template #content>\n    <ul class=\"list\">\n      <li *ngFor=\"let item of hardWords$ | async\" class=\"list-item\">\n        <div class=\"list-item-container\">\n          <div class=\"item-image\">\n            <img src=\"{{ url }}/{{ item.image }}\" alt=\"{{ item.word }}\" />\n          </div>\n          <div class=\"item-content\">\n            <div class=\"item-title\">\n              <button mat-icon-button (click)=\"playAudio(item.audio, item.audioMeaning, item.audioExample)\">\n                <mat-icon mat-list-icon>volume_up</mat-icon>\n              </button>\n              <span>\n                {{ item.word }}\n              </span>\n              <span>: {{ item.transcription }}</span>\n              <span> - {{ item.wordTranslate }}</span>\n            </div>\n            <div class=\"item-description\">\n              <p>\n                <span [innerHTML]=\"item.textMeaning\"></span>\n                <span> - {{ item.textMeaningTranslate }}</span>\n              </p>\n              <p>\n                <span [innerHTML]=\"item.textExample\"></span>\n                <span> - {{ item.textExampleTranslate }}</span>\n              </p>\n              <p>\n                {{ item.learningResults }}\n              </p>\n            </div>\n          </div>\n\n          <div class=\"item-controls\">\n            <button (click)=\"deleteWord(item._id)\">\n              <mat-icon>restore_from_trash</mat-icon>\n            </button>\n          </div>\n        </div>\n        <mat-divider></mat-divider>\n      </li>\n    </ul>\n  </ng-template>\n\n  <mat-spinner *ngIf=\"isLoading$ | async; else content\"></mat-spinner>\n</mat-drawer-container>\n"],"sourceRoot":"webpack:///"}